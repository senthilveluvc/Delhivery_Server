import { HttpClient } from '@wix/sdk-types';
import { RawHttpResponse, RawHttpResponseNonNullableFields, TokenInfoOptions, TokenInfoResponse, TokenInfoResponseNonNullableFields, TokenOptions } from './identity-oauth-v1-refresh-token-oauth.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function token(httpClient: HttpClient): TokenSignature;
interface TokenSignature {
    /**
     * Creates an access token.
     *
     *
     * The endpoint accepts raw HTTP requests. You must pass the request's body
     * parameters formatted as bytes in the raw HTTP request's `body` field,
     * following this template:
     * `{"grantType": "client_credentials", "client_id": "<APP_ID>", "client_secret": "<APP_SECRET_KEY>", "instance_id": "<INSTANCE_ID>"}`.
     *
     * When the call succeeds, Wix returns `{"statusCode": 200}` and the created access
     * token in the `body` field of the raw HTTP response.
     *
     * In case the call fails, Wix returns the relevant `4XX` error code in the raw
     * HTTP response's `statusCode` field and details
     * about the error in `body`. Error details follow the
     * [conventions of the Internet Engineering Task Force (IETF)](https://datatracker.ietf.org/doc/html/rfc6749#appendix-A.7).
     */
    (options?: TokenOptions | undefined): Promise<RawHttpResponse & RawHttpResponseNonNullableFields>;
}
export declare function tokenInfo(httpClient: HttpClient): TokenInfoSignature;
interface TokenInfoSignature {
    /**
     * Token Introspection Endpoint.
     */
    (options?: TokenInfoOptions | undefined): Promise<TokenInfoResponse & TokenInfoResponseNonNullableFields>;
}
export { ActionEvent, AuthorizeRequest, DeviceCodeRequest, DeviceCodeResponse, DeviceVerifyRequest, DeviceVerifyResponse, DeviceVerifyV2Request, DeviceVerifyV2Response, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, HeadersEntry, InvalidateUserCodeRequest, InvalidateUserCodeResponse, PathParametersEntry, QueryParametersEntry, RawHttpRequest, RawHttpResponse, RawHttpResponseNonNullableFields, RefreshToken, RestoreInfo, RevokeRefreshTokenRequest, RevokeRefreshTokenResponse, SubjectType, TokenInfoOptions, TokenInfoResponse, TokenInfoResponseNonNullableFields, TokenOptions, } from './identity-oauth-v1-refresh-token-oauth.universal.js';
