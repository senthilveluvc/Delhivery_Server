import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixEcomDiscountsDiscountRuleServiceUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/discount-rules-service',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/discount-rules',
                destPath: '/v1/discount-rules',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/ecom/v1/discount-rules',
                destPath: '/v1/discount-rules',
            },
            {
                srcPath: '/v1/discount-rules',
                destPath: '/v1/discount-rules',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_discount-rules';
/**
 * Creates a new discount rule.
 *
 *
 * The `createDiscountRule()` function returns a Promise that resolves to the new discount rule when it's created.
 */
export function createDiscountRule(payload) {
    function __createDiscountRule({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'discountRule.createdDate' },
                    { path: 'discountRule.updatedDate' },
                    { path: 'discountRule.activeTimeInfo.start' },
                    { path: 'discountRule.activeTimeInfo.end' },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'discountRule.discounts.values.percentage' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.discounts.v1.discount_rule',
            method: 'POST',
            methodFqn: 'com.wix.ecom.discounts.DiscountRuleService.CreateDiscountRule',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomDiscountsDiscountRuleServiceUrl({
                protoPath: '/v1/discount-rules',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'discountRule.createdDate' },
                        { path: 'discountRule.updatedDate' },
                        { path: 'discountRule.activeTimeInfo.start' },
                        { path: 'discountRule.activeTimeInfo.end' },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'discountRule.discounts.values.percentage' }],
                },
            ]),
        };
        return metadata;
    }
    return __createDiscountRule;
}
/**
 * Retrieves a discount rule.
 *
 *
 * The `getDiscountRule()` function returns a Promise that resolves when the specified discount rule is retrieved.
 */
export function getDiscountRule(payload) {
    function __getDiscountRule({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.discounts.v1.discount_rule',
            method: 'GET',
            methodFqn: 'com.wix.ecom.discounts.DiscountRuleService.GetDiscountRule',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomDiscountsDiscountRuleServiceUrl({
                protoPath: '/v1/discount-rules/{discountRuleId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'discountRule.createdDate' },
                        { path: 'discountRule.updatedDate' },
                        { path: 'discountRule.activeTimeInfo.start' },
                        { path: 'discountRule.activeTimeInfo.end' },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'discountRule.discounts.values.percentage' }],
                },
            ]),
        };
        return metadata;
    }
    return __getDiscountRule;
}
/**
 * Updates a discount rule's properties.
 *
 *
 * The `updateDiscountRule()` function returns a Promise that resolves when the specified discount rule's properties are updated.
 *
 * Each time the discount rule is updated, `revision` increments by 1. The existing `revision` must be included when updating the discount rule. This ensures you're working with the latest discount rule information, and it prevents unintended overwrites.
 */
export function updateDiscountRule(payload) {
    function __updateDiscountRule({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'mask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'discountRule.createdDate' },
                    { path: 'discountRule.updatedDate' },
                    { path: 'discountRule.activeTimeInfo.start' },
                    { path: 'discountRule.activeTimeInfo.end' },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'discountRule.discounts.values.percentage' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.discounts.v1.discount_rule',
            method: 'PATCH',
            methodFqn: 'com.wix.ecom.discounts.DiscountRuleService.UpdateDiscountRule',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomDiscountsDiscountRuleServiceUrl({
                protoPath: '/v1/discount-rules/{discountRule.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'discountRule.createdDate' },
                        { path: 'discountRule.updatedDate' },
                        { path: 'discountRule.activeTimeInfo.start' },
                        { path: 'discountRule.activeTimeInfo.end' },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'discountRule.discounts.values.percentage' }],
                },
            ]),
        };
        return metadata;
    }
    return __updateDiscountRule;
}
/**
 * Deletes a discount rule.
 *
 *
 * The `deleteDiscountRule()` function returns a Promise that resolves when the specified discount rule is deleted.
 */
export function deleteDiscountRule(payload) {
    function __deleteDiscountRule({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.discounts.v1.discount_rule',
            method: 'DELETE',
            methodFqn: 'com.wix.ecom.discounts.DiscountRuleService.DeleteDiscountRule',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomDiscountsDiscountRuleServiceUrl({
                protoPath: '/v1/discount-rules/{discountRuleId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteDiscountRule;
}
/**
 * Creates a query to retrieve a list of discount rules.
 *
 *
 * The `queryDiscountRules()` function builds a query to retrieve a list of up to 100 discount rules, and returns a [`DiscountRulesQueryBuilder`](#discountrulesquerybuilder) object.
 *
 * The returned object contains the query definition which is typically used to run the query using the [`find()`](/discount-rules/discount-rules-query-builder/find) function.
 *
 * You can refine the query by chaining `DiscountRulesQueryBuilder` functions onto the query. `DiscountRulesQueryBuilder` functions enable you to sort, filter, and control the results queryDiscountRules() returns.
 *
 * By default, `queryDiscountRules()` sorts results by [`ascending("_id")`](/discount-rules/discount-rules-query-builder/ascending) by default. This can be overridden.
 *
 * To learn how to query posts, refer to the table below.
 *
 * The following `DiscountRulesQueryBuilder` functions are supported for the `queryDiscountRules()` function. For a full description of the discount rule object, see the object returned for the [`items`](/discount-rules/discount-rules-query-result/items) property in the `DiscountRulesQueryResult`.
 */
export function queryDiscountRules(payload) {
    function __queryDiscountRules({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.discounts.v1.discount_rule',
            method: 'POST',
            methodFqn: 'com.wix.ecom.discounts.DiscountRuleService.QueryDiscountRules',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomDiscountsDiscountRuleServiceUrl({
                protoPath: '/v1/discount-rules/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'discountRules.createdDate' },
                        { path: 'discountRules.updatedDate' },
                        { path: 'discountRules.activeTimeInfo.start' },
                        { path: 'discountRules.activeTimeInfo.end' },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'discountRules.discounts.values.percentage' }],
                },
            ]),
        };
        return metadata;
    }
    return __queryDiscountRules;
}
//# sourceMappingURL=ecom-discounts-v1-discount-rule-discount-rules.http.js.map