import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { DiscountRule, DiscountRuleCreatedEnvelope, DiscountRuleDeletedEnvelope, DiscountRuleNonNullableFields, DiscountRuleUpdatedEnvelope, DiscountRulesQueryBuilder, UpdateDiscountRule } from './ecom-discounts-v1-discount-rule-discount-rules.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createDiscountRule(httpClient: HttpClient): CreateDiscountRuleSignature;
interface CreateDiscountRuleSignature {
    /**
     * Creates a new discount rule.
     *
     *
     * The `createDiscountRule()` function returns a Promise that resolves to the new discount rule when it's created.
     * @param - Discount rule info.
     * @returns Discount rule.
     */
    (discountRule: DiscountRule): Promise<DiscountRule & DiscountRuleNonNullableFields>;
}
export declare function getDiscountRule(httpClient: HttpClient): GetDiscountRuleSignature;
interface GetDiscountRuleSignature {
    /**
     * Retrieves a discount rule.
     *
     *
     * The `getDiscountRule()` function returns a Promise that resolves when the specified discount rule is retrieved.
     * @param - ID of the discount rule to retrieve.
     * @returns The requested discount rule.
     */
    (discountRuleId: string): Promise<DiscountRule & DiscountRuleNonNullableFields>;
}
export declare function updateDiscountRule(httpClient: HttpClient): UpdateDiscountRuleSignature;
interface UpdateDiscountRuleSignature {
    /**
     * Updates a discount rule's properties.
     *
     *
     * The `updateDiscountRule()` function returns a Promise that resolves when the specified discount rule's properties are updated.
     *
     * Each time the discount rule is updated, `revision` increments by 1. The existing `revision` must be included when updating the discount rule. This ensures you're working with the latest discount rule information, and it prevents unintended overwrites.
     * @param - Discount rule ID.
     * @param - Discount rule info.
     * @param - Discount rule info.
     * @returns Updated discount rule.
     */
    (_id: string | null, discountRule: UpdateDiscountRule): Promise<DiscountRule & DiscountRuleNonNullableFields>;
}
export declare function deleteDiscountRule(httpClient: HttpClient): DeleteDiscountRuleSignature;
interface DeleteDiscountRuleSignature {
    /**
     * Deletes a discount rule.
     *
     *
     * The `deleteDiscountRule()` function returns a Promise that resolves when the specified discount rule is deleted.
     * @param - ID of the discount rule to delete.
     */
    (discountRuleId: string): Promise<void>;
}
export declare function queryDiscountRules(httpClient: HttpClient): QueryDiscountRulesSignature;
interface QueryDiscountRulesSignature {
    /**
     * Creates a query to retrieve a list of discount rules.
     *
     *
     * The `queryDiscountRules()` function builds a query to retrieve a list of up to 100 discount rules, and returns a [`DiscountRulesQueryBuilder`](#discountrulesquerybuilder) object.
     *
     * The returned object contains the query definition which is typically used to run the query using the [`find()`](/discount-rules/discount-rules-query-builder/find) function.
     *
     * You can refine the query by chaining `DiscountRulesQueryBuilder` functions onto the query. `DiscountRulesQueryBuilder` functions enable you to sort, filter, and control the results queryDiscountRules() returns.
     *
     * By default, `queryDiscountRules()` sorts results by [`ascending("_id")`](/discount-rules/discount-rules-query-builder/ascending) by default. This can be overridden.
     *
     * To learn how to query posts, refer to the table below.
     *
     * The following `DiscountRulesQueryBuilder` functions are supported for the `queryDiscountRules()` function. For a full description of the discount rule object, see the object returned for the [`items`](/discount-rules/discount-rules-query-result/items) property in the `DiscountRulesQueryResult`.
     */
    (): DiscountRulesQueryBuilder;
}
export declare const onDiscountRuleCreated: EventDefinition<DiscountRuleCreatedEnvelope, "wix.ecom.discounts.v1.discount_rule_created">;
export declare const onDiscountRuleDeleted: EventDefinition<DiscountRuleDeletedEnvelope, "wix.ecom.discounts.v1.discount_rule_deleted">;
export declare const onDiscountRuleUpdated: EventDefinition<DiscountRuleUpdatedEnvelope, "wix.ecom.discounts.v1.discount_rule_updated">;
export { ActionEvent, ActiveTimeInfo, And, AppliedDiscount, AppliedDiscountRule, AppliedSubjectType, BaseEventMetadata, BuyXGetYInfo, CatalogItemFilter, CatalogReference, CreateDiscountRuleRequest, CreateDiscountRuleResponse, CreateDiscountRuleResponseNonNullableFields, CursorPaging, Cursors, Custom, CustomFilter, CustomerBuy, CustomerBuyConditionOneOf, CustomerGet, DeleteDiscountRuleRequest, DeleteDiscountRuleResponse, Discount, DiscountDiscountOneOf, DiscountRule, DiscountRuleCreatedEnvelope, DiscountRuleDeletedEnvelope, DiscountRuleName, DiscountRuleNonNullableFields, DiscountRuleUpdatedEnvelope, DiscountRuleUsageLimitReached, DiscountRulesQueryBuilder, DiscountRulesQueryResult, DiscountSettings, DiscountTrigger, DiscountTriggerTriggerOneOf, DiscountType, Discounts, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, ExtendedFields, GetAppliedDiscountsRequest, GetAppliedDiscountsResponse, GetDiscountRuleRequest, GetDiscountRuleResponse, GetDiscountRuleResponseNonNullableFields, IdentificationData, IdentificationDataIdOneOf, ItemQuantityRange, LineItem, MessageEnvelope, MultiCurrencyPrice, Or, PlatformPaging, PlatformPagingMetadata, PlatformQuery, PlatformQueryPagingMethodOneOf, QueryDiscountRulesRequest, QueryDiscountRulesResponse, QueryDiscountRulesResponseNonNullableFields, RestoreInfo, Scope, ScopeScopeItemsOneOf, ScopeType, SortOrder, Sorting, SpecificItemsInfo, Status, SubtotalRange, TriggerType, Type, UpdateDiscountRule, UpdateDiscountRuleRequest, UpdateDiscountRuleResponse, UpdateDiscountRuleResponseNonNullableFields, WebhookIdentityType, } from './ecom-discounts-v1-discount-rule-discount-rules.universal.js';
