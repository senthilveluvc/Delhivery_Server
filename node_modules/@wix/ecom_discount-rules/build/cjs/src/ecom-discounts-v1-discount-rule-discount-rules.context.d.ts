import { createDiscountRule as publicCreateDiscountRule, getDiscountRule as publicGetDiscountRule, updateDiscountRule as publicUpdateDiscountRule, deleteDiscountRule as publicDeleteDiscountRule, queryDiscountRules as publicQueryDiscountRules } from './ecom-discounts-v1-discount-rule-discount-rules.public.js';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';
import { onDiscountRuleCreated as publicOnDiscountRuleCreated } from './ecom-discounts-v1-discount-rule-discount-rules.public.js';
import { onDiscountRuleDeleted as publicOnDiscountRuleDeleted } from './ecom-discounts-v1-discount-rule-discount-rules.public.js';
import { onDiscountRuleUpdated as publicOnDiscountRuleUpdated } from './ecom-discounts-v1-discount-rule-discount-rules.public.js';
export declare const createDiscountRule: MaybeContext<BuildRESTFunction<typeof publicCreateDiscountRule> & typeof publicCreateDiscountRule>;
export declare const getDiscountRule: MaybeContext<BuildRESTFunction<typeof publicGetDiscountRule> & typeof publicGetDiscountRule>;
export declare const updateDiscountRule: MaybeContext<BuildRESTFunction<typeof publicUpdateDiscountRule> & typeof publicUpdateDiscountRule>;
export declare const deleteDiscountRule: MaybeContext<BuildRESTFunction<typeof publicDeleteDiscountRule> & typeof publicDeleteDiscountRule>;
export declare const queryDiscountRules: MaybeContext<BuildRESTFunction<typeof publicQueryDiscountRules> & typeof publicQueryDiscountRules>;
/**
 * Triggered when a discount rule is created.
 */
export declare const onDiscountRuleCreated: ReturnType<typeof createEventModule<typeof publicOnDiscountRuleCreated>>;
/**
 * Triggered when a discount rule is deleted.
 */
export declare const onDiscountRuleDeleted: ReturnType<typeof createEventModule<typeof publicOnDiscountRuleDeleted>>;
/**
 * Triggered when a discount rule is updated.
 */
export declare const onDiscountRuleUpdated: ReturnType<typeof createEventModule<typeof publicOnDiscountRuleUpdated>>;
export { ScopeType, TriggerType, Type, DiscountType, Status, AppliedSubjectType, SortOrder, WebhookIdentityType, } from './ecom-discounts-v1-discount-rule-discount-rules.universal.js';
export { DiscountRule, DiscountTrigger, DiscountTriggerTriggerOneOf, Scope, ScopeScopeItemsOneOf, CatalogItemFilter, CustomFilter, And, Or, Custom, SubtotalRange, ItemQuantityRange, ActiveTimeInfo, Discounts, Discount, DiscountDiscountOneOf, SpecificItemsInfo, BuyXGetYInfo, CustomerBuy, CustomerBuyConditionOneOf, CustomerGet, DiscountSettings, ExtendedFields, CreateDiscountRuleRequest, CreateDiscountRuleResponse, GetDiscountRuleRequest, GetDiscountRuleResponse, UpdateDiscountRuleRequest, UpdateDiscountRuleResponse, DeleteDiscountRuleRequest, DeleteDiscountRuleResponse, QueryDiscountRulesRequest, PlatformQuery, PlatformQueryPagingMethodOneOf, Sorting, PlatformPaging, CursorPaging, QueryDiscountRulesResponse, PlatformPagingMetadata, Cursors, GetAppliedDiscountsRequest, LineItem, CatalogReference, GetAppliedDiscountsResponse, AppliedDiscount, AppliedDiscountRule, DiscountRuleName, MultiCurrencyPrice, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, RestoreInfo, EntityUpdatedEvent, EntityDeletedEvent, ActionEvent, Empty, DiscountRuleUsageLimitReached, MessageEnvelope, IdentificationData, IdentificationDataIdOneOf, DiscountRuleNonNullableFields, CreateDiscountRuleResponseNonNullableFields, GetDiscountRuleResponseNonNullableFields, UpdateDiscountRuleResponseNonNullableFields, QueryDiscountRulesResponseNonNullableFields, BaseEventMetadata, EventMetadata, DiscountRuleCreatedEnvelope, DiscountRuleDeletedEnvelope, DiscountRuleUpdatedEnvelope, UpdateDiscountRule, DiscountRulesQueryResult, DiscountRulesQueryBuilder, } from './ecom-discounts-v1-discount-rule-discount-rules.universal.js';
