import { addTipDistributionsToOrder as universalAddTipDistributionsToOrder, getTipByDraftOrderId as universalGetTipByDraftOrderId, getTipByOrderId as universalGetTipByOrderId, getTipChoice as universalGetTipChoice, previewTip as universalPreviewTip, queryTipDistributions as universalQueryTipDistributions, removeTipFromOrder as universalRemoveTipFromOrder, setTipOnOrder as universalSetTipOnOrder, sumTipDistributionAmounts as universalSumTipDistributionAmounts, updateTipChoice as universalUpdateTipChoice, } from './tips-v1-tip-tips.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/ecom' };
export function previewTip(httpClient) {
    return (lineItemInfo, options) => universalPreviewTip(lineItemInfo, options, 
    // @ts-ignore
    { httpClient });
}
export function getTipByOrderId(httpClient) {
    return (orderId) => universalGetTipByOrderId(orderId, 
    // @ts-ignore
    { httpClient });
}
export function getTipByDraftOrderId(httpClient) {
    return (draftOrderId) => universalGetTipByDraftOrderId(draftOrderId, 
    // @ts-ignore
    { httpClient });
}
export function getTipChoice(httpClient) {
    return (purchaseFlowId) => universalGetTipChoice(purchaseFlowId, 
    // @ts-ignore
    { httpClient });
}
export function updateTipChoice(httpClient) {
    return (tipChoice, options) => universalUpdateTipChoice(tipChoice, options, 
    // @ts-ignore
    { httpClient });
}
export function setTipOnOrder(httpClient) {
    return (options) => universalSetTipOnOrder(options, 
    // @ts-ignore
    { httpClient });
}
export function removeTipFromOrder(httpClient) {
    return (options) => universalRemoveTipFromOrder(options, 
    // @ts-ignore
    { httpClient });
}
export function addTipDistributionsToOrder(httpClient) {
    return (options) => universalAddTipDistributionsToOrder(options, 
    // @ts-ignore
    { httpClient });
}
export function queryTipDistributions(httpClient) {
    return () => universalQueryTipDistributions(
    // @ts-ignore
    { httpClient });
}
export function sumTipDistributionAmounts(httpClient) {
    return (filter) => universalSumTipDistributionAmounts(filter, 
    // @ts-ignore
    { httpClient });
}
export { IdentityType, QueryBy, SortOrder, Source, TipType, WebhookIdentityType, } from './tips-v1-tip-tips.universal.js';
//# sourceMappingURL=tips-v1-tip-tips.public.js.map