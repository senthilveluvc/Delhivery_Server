"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportItemsBackInStock = exports.getBackInStockNotificationRequestsCountByCatalogReferences = exports.queryBackInStockNotificationRequests = exports.markAsNotificationSent = exports.deleteBackInStockNotificationRequest = exports.getBackInStockNotificationRequest = exports.createBackInStockNotificationRequest = void 0;
const ambassadorWixEcomV1BackInStockNotificationRequest = __importStar(require("./ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.http.js"));
function createBackInStockNotificationRequest() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.createBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/back-in-stock-notification-requests',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createBackInStockNotificationRequest = createBackInStockNotificationRequest;
function getBackInStockNotificationRequest() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.getBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getBackInStockNotificationRequest = getBackInStockNotificationRequest;
function deleteBackInStockNotificationRequest() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.deleteBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/back-in-stock-notification-requests/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.deleteBackInStockNotificationRequest = deleteBackInStockNotificationRequest;
function markAsNotificationSent() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.markAsNotificationSent(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PUT',
        path: '/v1/back-in-stock-notification-requests/{id}/mark-as-notification-sent',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.markAsNotificationSent = markAsNotificationSent;
function queryBackInStockNotificationRequests() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.queryBackInStockNotificationRequests(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.queryBackInStockNotificationRequests = queryBackInStockNotificationRequests;
function getBackInStockNotificationRequestsCountByCatalogReferences() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.getBackInStockNotificationRequestsCountByCatalogReferences(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests/count-by-catalog-reference',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getBackInStockNotificationRequestsCountByCatalogReferences = getBackInStockNotificationRequestsCountByCatalogReferences;
function reportItemsBackInStock() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.reportItemsBackInStock(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/back-in-stock-notification-requests/report-items-back-in-stock',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.reportItemsBackInStock = reportItemsBackInStock;
//# sourceMappingURL=ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.meta.js.map