import * as ambassadorWixEcomV1BackInStockNotificationRequest from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.http.js';
export function createBackInStockNotificationRequest() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.createBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/back-in-stock-notification-requests',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function getBackInStockNotificationRequest() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.getBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function deleteBackInStockNotificationRequest() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.deleteBackInStockNotificationRequest(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/back-in-stock-notification-requests/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function markAsNotificationSent() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.markAsNotificationSent(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PUT',
        path: '/v1/back-in-stock-notification-requests/{id}/mark-as-notification-sent',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function queryBackInStockNotificationRequests() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.queryBackInStockNotificationRequests(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function getBackInStockNotificationRequestsCountByCatalogReferences() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.getBackInStockNotificationRequestsCountByCatalogReferences(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/back-in-stock-notification-requests/count-by-catalog-reference',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function reportItemsBackInStock() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1BackInStockNotificationRequest.reportItemsBackInStock(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/back-in-stock-notification-requests/report-items-back-in-stock',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
//# sourceMappingURL=ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.meta.js.map