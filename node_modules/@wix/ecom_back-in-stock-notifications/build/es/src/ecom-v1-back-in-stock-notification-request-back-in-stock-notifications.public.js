import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { createBackInStockNotificationRequest as universalCreateBackInStockNotificationRequest, deleteBackInStockNotificationRequest as universalDeleteBackInStockNotificationRequest, getBackInStockNotificationRequest as universalGetBackInStockNotificationRequest, getBackInStockNotificationRequestsCountByCatalogReferences as universalGetBackInStockNotificationRequestsCountByCatalogReferences, markAsNotificationSent as universalMarkAsNotificationSent, queryBackInStockNotificationRequests as universalQueryBackInStockNotificationRequests, reportItemsBackInStock as universalReportItemsBackInStock, } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/ecom' };
export function createBackInStockNotificationRequest(httpClient) {
    return (request, itemDetails) => universalCreateBackInStockNotificationRequest(request, itemDetails, 
    // @ts-ignore
    { httpClient });
}
export function getBackInStockNotificationRequest(httpClient) {
    return (_id) => universalGetBackInStockNotificationRequest(_id, 
    // @ts-ignore
    { httpClient });
}
export function deleteBackInStockNotificationRequest(httpClient) {
    return (_id) => universalDeleteBackInStockNotificationRequest(_id, 
    // @ts-ignore
    { httpClient });
}
export function markAsNotificationSent(httpClient) {
    return (_id) => universalMarkAsNotificationSent(_id, 
    // @ts-ignore
    { httpClient });
}
export function queryBackInStockNotificationRequests(httpClient) {
    return () => universalQueryBackInStockNotificationRequests(
    // @ts-ignore
    { httpClient });
}
export function getBackInStockNotificationRequestsCountByCatalogReferences(httpClient) {
    return (catalogReferences) => universalGetBackInStockNotificationRequestsCountByCatalogReferences(catalogReferences, 
    // @ts-ignore
    { httpClient });
}
export function reportItemsBackInStock(httpClient) {
    return (itemDetails, options) => universalReportItemsBackInStock(itemDetails, options, 
    // @ts-ignore
    { httpClient });
}
export const onBackInStockNotificationRequestCreated = EventDefinition('wix.ecom.v1.back_in_stock_notification_request_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBackInStockNotificationRequestUpdated = EventDefinition('wix.ecom.v1.back_in_stock_notification_request_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBackInStockNotificationRequestDeleted = EventDefinition('wix.ecom.v1.back_in_stock_notification_request_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'undefined.createdDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export { SortOrder, Status, WebhookIdentityType, } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.universal.js';
//# sourceMappingURL=ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.public.js.map