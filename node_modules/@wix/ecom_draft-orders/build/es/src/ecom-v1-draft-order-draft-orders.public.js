import { addLineItemsToDraftOrder as universalAddLineItemsToDraftOrder, commitDraftOrder as universalCommitDraftOrder, createCustomAdditionalFees as universalCreateCustomAdditionalFees, createCustomDiscounts as universalCreateCustomDiscounts, createDraftOrder as universalCreateDraftOrder, createEmptyDraftOrder as universalCreateEmptyDraftOrder, createOrderFromDraft as universalCreateOrderFromDraft, deleteCustomAdditionalFees as universalDeleteCustomAdditionalFees, deleteCustomDiscounts as universalDeleteCustomDiscounts, deleteDraftOrder as universalDeleteDraftOrder, getDraftOrder as universalGetDraftOrder, getOrderDraftabilityStatus as universalGetOrderDraftabilityStatus, queryDraftOrders as universalQueryDraftOrders, setAdditionalFees as universalSetAdditionalFees, setBillingInfo as universalSetBillingInfo, setBuyerInfo as universalSetBuyerInfo, setDiscounts as universalSetDiscounts, setRecipientInfo as universalSetRecipientInfo, setShippingInfo as universalSetShippingInfo, setTaxExemption as universalSetTaxExemption, updateLineItems as universalUpdateLineItems, } from './ecom-v1-draft-order-draft-orders.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/ecom' };
export function createDraftOrder(httpClient) {
    return (orderId) => universalCreateDraftOrder(orderId, 
    // @ts-ignore
    { httpClient });
}
export function createEmptyDraftOrder(httpClient) {
    return () => universalCreateEmptyDraftOrder(
    // @ts-ignore
    { httpClient });
}
export function addLineItemsToDraftOrder(httpClient) {
    return (draftOrderId, options) => universalAddLineItemsToDraftOrder(draftOrderId, options, 
    // @ts-ignore
    { httpClient });
}
export function updateLineItems(httpClient) {
    return (draftOrderId, options) => universalUpdateLineItems(draftOrderId, options, 
    // @ts-ignore
    { httpClient });
}
export function setDiscounts(httpClient) {
    return (draftOrderId, discounts) => universalSetDiscounts(draftOrderId, discounts, 
    // @ts-ignore
    { httpClient });
}
export function createCustomDiscounts(httpClient) {
    return (draftOrderId, options) => universalCreateCustomDiscounts(draftOrderId, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteCustomDiscounts(httpClient) {
    return (draftOrderId, discountIds) => universalDeleteCustomDiscounts(draftOrderId, discountIds, 
    // @ts-ignore
    { httpClient });
}
export function setAdditionalFees(httpClient) {
    return (draftOrderId, additionalFees) => universalSetAdditionalFees(draftOrderId, additionalFees, 
    // @ts-ignore
    { httpClient });
}
export function createCustomAdditionalFees(httpClient) {
    return (draftOrderId, options) => universalCreateCustomAdditionalFees(draftOrderId, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteCustomAdditionalFees(httpClient) {
    return (draftOrderId, customAdditionalFees) => universalDeleteCustomAdditionalFees(draftOrderId, customAdditionalFees, 
    // @ts-ignore
    { httpClient });
}
export function setShippingInfo(httpClient) {
    return () => universalSetShippingInfo(
    // @ts-ignore
    { httpClient });
}
export function setBuyerInfo(httpClient) {
    return () => universalSetBuyerInfo(
    // @ts-ignore
    { httpClient });
}
export function setRecipientInfo(httpClient) {
    return () => universalSetRecipientInfo(
    // @ts-ignore
    { httpClient });
}
export function setBillingInfo(httpClient) {
    return () => universalSetBillingInfo(
    // @ts-ignore
    { httpClient });
}
export function getDraftOrder(httpClient) {
    return (draftOrderId) => universalGetDraftOrder(draftOrderId, 
    // @ts-ignore
    { httpClient });
}
export function getOrderDraftabilityStatus(httpClient) {
    return (orderId) => universalGetOrderDraftabilityStatus(orderId, 
    // @ts-ignore
    { httpClient });
}
export function commitDraftOrder(httpClient) {
    return (draftOrderId, options) => universalCommitDraftOrder(draftOrderId, options, 
    // @ts-ignore
    { httpClient });
}
export function createOrderFromDraft(httpClient) {
    return () => universalCreateOrderFromDraft(
    // @ts-ignore
    { httpClient });
}
export function deleteDraftOrder(httpClient) {
    return (draftOrderId) => universalDeleteDraftOrder(draftOrderId, 
    // @ts-ignore
    { httpClient });
}
export function queryDraftOrders(httpClient) {
    return () => universalQueryDraftOrders(
    // @ts-ignore
    { httpClient });
}
export function setTaxExemption(httpClient) {
    return () => universalSetTaxExemption(
    // @ts-ignore
    { httpClient });
}
export { ActivityType, AppliedDiscountDiscountType, AttributionSource, ChannelType, DescriptionLineType, DiscountReason, DiscountType, EditingStatus, FileType, FulfillmentStatus, ItemTypeItemType, JurisdictionType, LineItemQuantityChangeType, NonDraftableReason, OrderStatus, PaymentOptionType, PaymentStatus, PickupDetailsPickupMethod, PickupMethod, RuleType, SortOrder, SourceType, SubscriptionFrequency, TaxableAddressType, VatType, WebhookIdentityType, WeightUnit, } from './ecom-v1-draft-order-draft-orders.universal.js';
//# sourceMappingURL=ecom-v1-draft-order-draft-orders.public.js.map