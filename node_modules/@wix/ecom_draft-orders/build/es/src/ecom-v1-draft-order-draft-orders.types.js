export var DescriptionLineType;
(function (DescriptionLineType) {
    /** Unrecognized type. */
    DescriptionLineType["UNRECOGNISED"] = "UNRECOGNISED";
    /** Plain text type. */
    DescriptionLineType["PLAIN_TEXT"] = "PLAIN_TEXT";
    /** Color type. */
    DescriptionLineType["COLOR"] = "COLOR";
})(DescriptionLineType || (DescriptionLineType = {}));
export var ItemTypeItemType;
(function (ItemTypeItemType) {
    ItemTypeItemType["UNRECOGNISED"] = "UNRECOGNISED";
    ItemTypeItemType["PHYSICAL"] = "PHYSICAL";
    ItemTypeItemType["DIGITAL"] = "DIGITAL";
    ItemTypeItemType["GIFT_CARD"] = "GIFT_CARD";
    ItemTypeItemType["SERVICE"] = "SERVICE";
})(ItemTypeItemType || (ItemTypeItemType = {}));
/** Type of selected payment option for catalog item */
export var PaymentOptionType;
(function (PaymentOptionType) {
    /** The entire payment for this item happens as part of the checkout. */
    PaymentOptionType["FULL_PAYMENT_ONLINE"] = "FULL_PAYMENT_ONLINE";
    /** The entire payment for this item happens after checkout. For example, when using cash, check, or other offline payment methods. */
    PaymentOptionType["FULL_PAYMENT_OFFLINE"] = "FULL_PAYMENT_OFFLINE";
    /** Payment for this item is done by charging a membership. When selected, `price` is `0`. */
    PaymentOptionType["MEMBERSHIP"] = "MEMBERSHIP";
    /** Partial payment to be paid upfront during checkout. The initial amount to be paid for each line item is specified in `depositAmount`. */
    PaymentOptionType["DEPOSIT_ONLINE"] = "DEPOSIT_ONLINE";
    /** Payment for this item can only be done by charging a membership and must be manually redeemed in the dashboard by the site admin. When selected, `price` is `0`. */
    PaymentOptionType["MEMBERSHIP_OFFLINE"] = "MEMBERSHIP_OFFLINE";
})(PaymentOptionType || (PaymentOptionType = {}));
/** JurisdictionType represents the type of the jurisdiction in which this tax detail applies (e.g. Country,State,County,City,Special). */
export var JurisdictionType;
(function (JurisdictionType) {
    JurisdictionType["UNDEFINED"] = "UNDEFINED";
    JurisdictionType["COUNTRY"] = "COUNTRY";
    JurisdictionType["STATE"] = "STATE";
    JurisdictionType["COUNTY"] = "COUNTY";
    JurisdictionType["CITY"] = "CITY";
    JurisdictionType["SPECIAL"] = "SPECIAL";
})(JurisdictionType || (JurisdictionType = {}));
/** Frequency unit of recurring payment */
export var SubscriptionFrequency;
(function (SubscriptionFrequency) {
    SubscriptionFrequency["UNDEFINED"] = "UNDEFINED";
    SubscriptionFrequency["DAY"] = "DAY";
    SubscriptionFrequency["WEEK"] = "WEEK";
    SubscriptionFrequency["MONTH"] = "MONTH";
    SubscriptionFrequency["YEAR"] = "YEAR";
})(SubscriptionFrequency || (SubscriptionFrequency = {}));
export var TaxableAddressType;
(function (TaxableAddressType) {
    TaxableAddressType["UNKNOWN_TAXABLE_ADDRESS"] = "UNKNOWN_TAXABLE_ADDRESS";
    TaxableAddressType["BUSINESS"] = "BUSINESS";
    TaxableAddressType["BILLING"] = "BILLING";
    TaxableAddressType["SHIPPING"] = "SHIPPING";
})(TaxableAddressType || (TaxableAddressType = {}));
/** tax info types */
export var VatType;
(function (VatType) {
    VatType["UNSPECIFIED"] = "UNSPECIFIED";
    /** CPF - for individual tax payers. */
    VatType["CPF"] = "CPF";
    /** CNPJ - for corporations */
    VatType["CNPJ"] = "CNPJ";
})(VatType || (VatType = {}));
export var PickupDetailsPickupMethod;
(function (PickupDetailsPickupMethod) {
    PickupDetailsPickupMethod["UNKNOWN_METHOD"] = "UNKNOWN_METHOD";
    PickupDetailsPickupMethod["STORE_PICKUP"] = "STORE_PICKUP";
    PickupDetailsPickupMethod["PICKUP_POINT"] = "PICKUP_POINT";
})(PickupDetailsPickupMethod || (PickupDetailsPickupMethod = {}));
export var SourceType;
(function (SourceType) {
    /** Part of the original order */
    SourceType["ORIGINAL_ORDER"] = "ORIGINAL_ORDER";
    /** Added by estimate * */
    SourceType["AUTOMATIC"] = "AUTOMATIC";
    /** Added manually to current draft order */
    SourceType["CUSTOM"] = "CUSTOM";
})(SourceType || (SourceType = {}));
export var AppliedDiscountDiscountType;
(function (AppliedDiscountDiscountType) {
    AppliedDiscountDiscountType["GLOBAL"] = "GLOBAL";
    AppliedDiscountDiscountType["SPECIFIC_ITEMS"] = "SPECIFIC_ITEMS";
    AppliedDiscountDiscountType["SHIPPING"] = "SHIPPING";
})(AppliedDiscountDiscountType || (AppliedDiscountDiscountType = {}));
export var DiscountReason;
(function (DiscountReason) {
    DiscountReason["UNSPECIFIED"] = "UNSPECIFIED";
    DiscountReason["EXCHANGED_ITEMS"] = "EXCHANGED_ITEMS";
})(DiscountReason || (DiscountReason = {}));
export var EditingStatus;
(function (EditingStatus) {
    /** DraftOrder is in draft state. */
    EditingStatus["DRAFT"] = "DRAFT";
    /** DraftOrder is in committed state. */
    EditingStatus["COMMITTED"] = "COMMITTED";
})(EditingStatus || (EditingStatus = {}));
export var WeightUnit;
(function (WeightUnit) {
    /** Weight unit can't be classified, due to an error */
    WeightUnit["UNSPECIFIED_WEIGHT_UNIT"] = "UNSPECIFIED_WEIGHT_UNIT";
    /** Kilograms */
    WeightUnit["KG"] = "KG";
    /** Pounds */
    WeightUnit["LB"] = "LB";
})(WeightUnit || (WeightUnit = {}));
export var PickupMethod;
(function (PickupMethod) {
    PickupMethod["UNKNOWN_METHOD"] = "UNKNOWN_METHOD";
    PickupMethod["STORE_PICKUP"] = "STORE_PICKUP";
    PickupMethod["PICKUP_POINT"] = "PICKUP_POINT";
})(PickupMethod || (PickupMethod = {}));
export var RuleType;
(function (RuleType) {
    RuleType["VALIDATION"] = "VALIDATION";
    RuleType["OTHER"] = "OTHER";
    RuleType["MAX"] = "MAX";
    RuleType["MIN"] = "MIN";
    RuleType["MAX_LENGTH"] = "MAX_LENGTH";
    RuleType["MIN_LENGTH"] = "MIN_LENGTH";
    RuleType["MAX_SIZE"] = "MAX_SIZE";
    RuleType["MIN_SIZE"] = "MIN_SIZE";
    RuleType["FORMAT"] = "FORMAT";
    RuleType["DECIMAL_LTE"] = "DECIMAL_LTE";
    RuleType["DECIMAL_GTE"] = "DECIMAL_GTE";
    RuleType["DECIMAL_LT"] = "DECIMAL_LT";
    RuleType["DECIMAL_GT"] = "DECIMAL_GT";
    RuleType["DECIMAL_MAX_SCALE"] = "DECIMAL_MAX_SCALE";
    RuleType["INVALID_ENUM_VALUE"] = "INVALID_ENUM_VALUE";
    RuleType["REQUIRED_FIELD"] = "REQUIRED_FIELD";
    RuleType["FIELD_NOT_ALLOWED"] = "FIELD_NOT_ALLOWED";
    RuleType["ONE_OF_ALIGNMENT"] = "ONE_OF_ALIGNMENT";
    RuleType["EXACT_LENGTH"] = "EXACT_LENGTH";
    RuleType["EXACT_SIZE"] = "EXACT_SIZE";
})(RuleType || (RuleType = {}));
export var FileType;
(function (FileType) {
    FileType["UNSPECIFIED"] = "UNSPECIFIED";
    FileType["SECURE_PICTURE"] = "SECURE_PICTURE";
    FileType["SECURE_VIDEO"] = "SECURE_VIDEO";
    FileType["SECURE_DOCUMENT"] = "SECURE_DOCUMENT";
    FileType["SECURE_MUSIC"] = "SECURE_MUSIC";
    FileType["SECURE_ARCHIVE"] = "SECURE_ARCHIVE";
})(FileType || (FileType = {}));
export var DiscountType;
(function (DiscountType) {
    DiscountType["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
    DiscountType["GLOBAL"] = "GLOBAL";
    DiscountType["SPECIFIC_ITEMS"] = "SPECIFIC_ITEMS";
    DiscountType["SHIPPING"] = "SHIPPING";
})(DiscountType || (DiscountType = {}));
export var NonDraftableReason;
(function (NonDraftableReason) {
    NonDraftableReason["UNSPECIFIED"] = "UNSPECIFIED";
    NonDraftableReason["PARTIALLY_OR_FULLY_REFUNDED"] = "PARTIALLY_OR_FULLY_REFUNDED";
    NonDraftableReason["UNSUPPORTED_CHANNEL_TYPE"] = "UNSUPPORTED_CHANNEL_TYPE";
    NonDraftableReason["ORDER_STATUS_IS_NOT_SUPPORTED"] = "ORDER_STATUS_IS_NOT_SUPPORTED";
    NonDraftableReason["ORDER_AND_SITE_CURRENCIES_ARE_INCONSISTENT"] = "ORDER_AND_SITE_CURRENCIES_ARE_INCONSISTENT";
    NonDraftableReason["ORDER_AND_SITE_WEIGHT_UNITS_ARE_INCONSISTENT"] = "ORDER_AND_SITE_WEIGHT_UNITS_ARE_INCONSISTENT";
    NonDraftableReason["AMOUNTS_DO_NOT_ADD_UP"] = "AMOUNTS_DO_NOT_ADD_UP";
    /** remove - this is not a reason, it's an error */
    NonDraftableReason["ORDER_NOT_FOUND"] = "ORDER_NOT_FOUND";
    NonDraftableReason["SUBSCRIPTION_LINE_ITEM_EXISTS"] = "SUBSCRIPTION_LINE_ITEM_EXISTS";
    NonDraftableReason["UNSUPPORTED_CATALOG_ITEM"] = "UNSUPPORTED_CATALOG_ITEM";
    NonDraftableReason["TAXABLE_EXISTING_ADDITIONAL_FEE"] = "TAXABLE_EXISTING_ADDITIONAL_FEE";
})(NonDraftableReason || (NonDraftableReason = {}));
export var PaymentStatus;
(function (PaymentStatus) {
    PaymentStatus["UNSPECIFIED"] = "UNSPECIFIED";
    /**
     * `NOT_PAID` can apply to an order made online, but not yet paid. In such cases `order.status` will be `INITIALIZED`.
     * This status also applies when an offline order needs to be manually marked as paid. In such cases `order.status` will be `APPROVED`.
     */
    PaymentStatus["NOT_PAID"] = "NOT_PAID";
    /** All required payments associated with this order are paid. */
    PaymentStatus["PAID"] = "PAID";
    /** Order partially refunded, but the refunded amount is less than the order's total price. See `order.balanceSummary` for more details. */
    PaymentStatus["PARTIALLY_REFUNDED"] = "PARTIALLY_REFUNDED";
    /** Order fully refunded. Refund amount equals total price. See `order.balanceSummary` for more details. */
    PaymentStatus["FULLY_REFUNDED"] = "FULLY_REFUNDED";
    /**
     * All payments pending.
     *
     * This can happen with two-step payments, when a payment requires manual review, or when a payment is in progress and will be concluded shortly.
     * Learn more about [pending orders](https://support.wix.com/en/article/pending-orders).
     */
    PaymentStatus["PENDING"] = "PENDING";
    /** At least one payment received and approved, but it covers less than the order's total price. See `order.balanceSummary` for more details. */
    PaymentStatus["PARTIALLY_PAID"] = "PARTIALLY_PAID";
    /**
     * Payment received, but not yet confirmed by the payment provider.
     *
     * In most cases, when a payment provider is holding payment it's because setup hasn't been successfully completed by the merchant/site owner.
     * To solve this, the merchant/site owner should log in to the payment provider's dashboard and make sure their account is set up correctly, or contact their support for further assistance.
     * @documentationMaturity preview
     */
    PaymentStatus["PENDING_MERCHANT"] = "PENDING_MERCHANT";
    /**
     * One or more payments canceled.
     * @documentationMaturity preview
     */
    PaymentStatus["CANCELED"] = "CANCELED";
    /**
     * One or more payments declined.
     * @documentationMaturity preview
     */
    PaymentStatus["DECLINED"] = "DECLINED";
})(PaymentStatus || (PaymentStatus = {}));
export var FulfillmentStatus;
(function (FulfillmentStatus) {
    /** None of the order items are fulfilled or the order was manually marked as unfulfilled. */
    FulfillmentStatus["NOT_FULFILLED"] = "NOT_FULFILLED";
    /**
     * All of the order items are fulfilled or the order was manually marked as fulfilled.
     * Orders without shipping info are fulfilled automatically.
     */
    FulfillmentStatus["FULFILLED"] = "FULFILLED";
    /** Some, but not all, of the order items are fulfilled. */
    FulfillmentStatus["PARTIALLY_FULFILLED"] = "PARTIALLY_FULFILLED";
})(FulfillmentStatus || (FulfillmentStatus = {}));
export var OrderStatus;
(function (OrderStatus) {
    /** Order created, but not yet approved or canceled. */
    OrderStatus["INITIALIZED"] = "INITIALIZED";
    /**
     * Order approved.
     *
     * This happens when either an online payment is received **or** when `order.priceSummary.total = 0` (a zero-total order).
     * Offline orders (cash payment) are automatically approved.
     */
    OrderStatus["APPROVED"] = "APPROVED";
    /** Order canceled by the user. */
    OrderStatus["CANCELED"] = "CANCELED";
    /**
     * Order pending.
     * @documentationMaturity preview
     */
    OrderStatus["PENDING"] = "PENDING";
    /**
     * Order rejected.
     *
     * This happens when pending payments fail.
     * @documentationMaturity preview
     */
    OrderStatus["REJECTED"] = "REJECTED";
})(OrderStatus || (OrderStatus = {}));
export var LineItemQuantityChangeType;
(function (LineItemQuantityChangeType) {
    /** Quantity increased. */
    LineItemQuantityChangeType["QUANTITY_INCREASED"] = "QUANTITY_INCREASED";
    /** Quantity decreased. */
    LineItemQuantityChangeType["QUANTITY_DECREASED"] = "QUANTITY_DECREASED";
})(LineItemQuantityChangeType || (LineItemQuantityChangeType = {}));
export var ActivityType;
(function (ActivityType) {
    ActivityType["ORDER_REFUNDED"] = "ORDER_REFUNDED";
    ActivityType["ORDER_PLACED"] = "ORDER_PLACED";
    ActivityType["ORDER_PAID"] = "ORDER_PAID";
    ActivityType["ORDER_FULFILLED"] = "ORDER_FULFILLED";
    ActivityType["ORDER_NOT_FULFILLED"] = "ORDER_NOT_FULFILLED";
    ActivityType["ORDER_CANCELED"] = "ORDER_CANCELED";
    ActivityType["DOWNLOAD_LINK_SENT"] = "DOWNLOAD_LINK_SENT";
    ActivityType["TRACKING_NUMBER_ADDED"] = "TRACKING_NUMBER_ADDED";
    ActivityType["TRACKING_NUMBER_EDITED"] = "TRACKING_NUMBER_EDITED";
    ActivityType["TRACKING_LINK_ADDED"] = "TRACKING_LINK_ADDED";
    ActivityType["SHIPPING_CONFIRMATION_EMAIL_SENT"] = "SHIPPING_CONFIRMATION_EMAIL_SENT";
    ActivityType["INVOICE_ADDED"] = "INVOICE_ADDED";
    ActivityType["INVOICE_REMOVED"] = "INVOICE_REMOVED";
    ActivityType["INVOICE_SENT"] = "INVOICE_SENT";
    ActivityType["FULFILLER_EMAIL_SENT"] = "FULFILLER_EMAIL_SENT";
    ActivityType["SHIPPING_ADDRESS_EDITED"] = "SHIPPING_ADDRESS_EDITED";
    ActivityType["EMAIL_EDITED"] = "EMAIL_EDITED";
    ActivityType["PICKUP_READY_EMAIL_SENT"] = "PICKUP_READY_EMAIL_SENT";
    ActivityType["CUSTOM_ACTIVITY"] = "CUSTOM_ACTIVITY";
    ActivityType["MERCHANT_COMMENT"] = "MERCHANT_COMMENT";
    ActivityType["ORDER_CREATED_FROM_EXCHANGE"] = "ORDER_CREATED_FROM_EXCHANGE";
    ActivityType["NEW_EXCHANGE_ORDER_CREATED"] = "NEW_EXCHANGE_ORDER_CREATED";
    ActivityType["ORDER_PARTIALLY_PAID"] = "ORDER_PARTIALLY_PAID";
    ActivityType["DRAFT_ORDER_CHANGES_APPLIED"] = "DRAFT_ORDER_CHANGES_APPLIED";
    ActivityType["SAVED_PAYMENT_METHOD"] = "SAVED_PAYMENT_METHOD";
    /** @documentationMaturity preview */
    ActivityType["PAYMENT_PENDING"] = "PAYMENT_PENDING";
    /** @documentationMaturity preview */
    ActivityType["PAYMENT_CANCELED"] = "PAYMENT_CANCELED";
    /** @documentationMaturity preview */
    ActivityType["PAYMENT_DECLINED"] = "PAYMENT_DECLINED";
    /** @documentationMaturity preview */
    ActivityType["ORDER_PENDING"] = "ORDER_PENDING";
    /** @documentationMaturity preview */
    ActivityType["ORDER_REJECTED"] = "ORDER_REJECTED";
})(ActivityType || (ActivityType = {}));
export var AttributionSource;
(function (AttributionSource) {
    AttributionSource["UNSPECIFIED"] = "UNSPECIFIED";
    AttributionSource["FACEBOOK_ADS"] = "FACEBOOK_ADS";
})(AttributionSource || (AttributionSource = {}));
export var ChannelType;
(function (ChannelType) {
    /** Unspecified sales channel. This value is not supported. */
    ChannelType["UNSPECIFIED"] = "UNSPECIFIED";
    /** A web client. */
    ChannelType["WEB"] = "WEB";
    /** [Point of sale solutions](https://support.wix.com/en/wix-mobile-pos-2196395). */
    ChannelType["POS"] = "POS";
    /** [eBay shop](https://support.wix.com/en/article/wix-stores-connecting-and-setting-up-an-ebay-shop). */
    ChannelType["EBAY"] = "EBAY";
    /** [Amazon shop](https://support.wix.com/en/article/wix-stores-connecting-and-setting-up-an-amazon-shop). */
    ChannelType["AMAZON"] = "AMAZON";
    /** Other sales platform. */
    ChannelType["OTHER_PLATFORM"] = "OTHER_PLATFORM";
    /** [Wix Owner app](https://support.wix.com/article/wix-owner-app-an-overview). */
    ChannelType["WIX_APP_STORE"] = "WIX_APP_STORE";
    /** Wix Invoices app in [your dashboard](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Finvoices/settings/general-settings) */
    ChannelType["WIX_INVOICES"] = "WIX_INVOICES";
    /** Wix merchant backoffice. */
    ChannelType["BACKOFFICE_MERCHANT"] = "BACKOFFICE_MERCHANT";
    /** Wish sales channel. */
    ChannelType["WISH"] = "WISH";
    /** [ClassPass sales channel](https://support.wix.com/en/article/wix-bookings-letting-clients-book-your-services-with-classpass). */
    ChannelType["CLASS_PASS"] = "CLASS_PASS";
    /** Global-E sales channel. */
    ChannelType["GLOBAL_E"] = "GLOBAL_E";
    /** [Facebook shop](https://support.wix.com/en/article/wix-stores-changes-to-facebook-shops). */
    ChannelType["FACEBOOK"] = "FACEBOOK";
    /** [Etsy sales channel](https://support.wix.com/en/article/wix-stores-request-adding-etsy-as-a-sales-channel). */
    ChannelType["ETSY"] = "ETSY";
    /** [TikTok sales channel](https://support.wix.com/en/article/wix-stores-request-adding-tiktok-as-a-sales-channel). */
    ChannelType["TIKTOK"] = "TIKTOK";
    /** [Faire marketplace integration](https://support.wix.com/en/article/wix-stores-creating-a-faire-store-using-the-faire-integration-app). */
    ChannelType["FAIRE_COM"] = "FAIRE_COM";
})(ChannelType || (ChannelType = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
export var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (WebhookIdentityType = {}));
//# sourceMappingURL=ecom-v1-draft-order-draft-orders.types.js.map