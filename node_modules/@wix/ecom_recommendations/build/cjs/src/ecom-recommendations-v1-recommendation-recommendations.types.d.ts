export interface Recommendation {
    /** Recommended items. */
    items?: CatalogReference[];
    /** The algorithm used to provide the recommendation. */
    algorithm?: Algorithm;
}
/** Used for grouping line items. Sent when an item is added to a cart, checkout, or order. */
export interface CatalogReference {
    /** ID of the item within the catalog it belongs to. */
    catalogItemId?: string;
    /**
     * ID of the app providing the catalog.
     *
     * You can get your app's ID from its page in the [app dashboard](https://dev.wix.com/dc3/my-apps/).
     *
     * For items from Wix catalogs, the following values always apply:
     * + Wix Stores: `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`
     * + Wix Bookings: `"13d21c63-b5ec-5912-8397-c3a5ddb27a97"`
     * + Wix Restaurants: `"9a5d83fd-8570-482e-81ab-cfa88942ee60"`
     */
    appId?: string;
    /**
     * Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The `options` field values differ depending on which catalog is providing the items.
     *
     * For products and variants from a Wix Stores catalog, learn more about [eCommerce integration](https://dev.wix.com/docs/rest/business-solutions/stores/catalog/e-commerce-integration).
     */
    options?: Record<string, any> | null;
}
export interface Algorithm {
    /** Algorithm ID defined by the app providing the algorithm. */
    id?: string;
    /**
     * App ID of the Wix or 3rd-party app providing the algorithm.
     *
     * Wix app IDs are <a href="https://dev.wix.com/api/rest/getting-started/wix-business-solutions#getting-started_wix-business-solutions_about-wix-business-solutions" target="_blank">listed here</a>.
     */
    appId?: string;
}
export interface ListAvailableAlgorithmsRequest {
}
export interface ListAvailableAlgorithmsResponse {
    /** Algorithms available for use on your Wix site or project. See the method description for more information. */
    availableAlgorithms?: AlgorithmInfo[];
}
export interface AlgorithmInfo {
    /** How the algorithm is configured. */
    config?: AlgorithmConfig;
    /**
     * The app ID of the application providing the algorithm.
     *
     * Wix app IDs are <a href="https://dev.wix.com/api/rest/getting-started/wix-business-solutions#getting-started_wix-business-solutions_about-wix-business-solutions" target="_blank">listed here</a>.
     */
    appId?: string;
    /**
     * App IDs of catalogs to which the algorithm can be applied.
     *
     * Wix app IDs are <a href="https://dev.wix.com/api/rest/getting-started/wix-business-solutions#getting-started_wix-business-solutions_about-wix-business-solutions" target="_blank">listed here</a>.
     */
    catalogAppIds?: string[];
}
export interface AlgorithmConfig {
    /** Algorithm name. This value is not translatable. */
    name?: string;
    /** Algorithm description. This describes how the algorithm works and if it has any limitations regarding site content, number of items in the catalog, site traffic, and so on. This value is not translatable. */
    description?: string;
    /** A supplemental `description`. It can be used to help break up and organize information. You can, for example, display this information as a tooltip or as an additional section that is collapsed by default. */
    additionalInfo?: string | null;
    /**
     * Algorithms may have the following types:
     * * `RELATED_ITEMS` - This type of algorithm provides recommendations based on 1 or more other provided items. For example, when an item is added to a cart, the algorithm can suggest other items frequently bought together with that item.
     * * `GLOBAL` - This type of algorithm provides general recommendations based on site or project statistics. For example, bestsellers or new arrivals.
     */
    algorithmType?: AlgorithmType;
    /** Algorithm ID. This must be unique for a specific app but does not have to be unique across all apps on the site or in the project. */
    algorithmId?: string;
}
export declare enum AlgorithmType {
    UNSPECIFIED = "UNSPECIFIED",
    RELATED_ITEMS = "RELATED_ITEMS",
    GLOBAL = "GLOBAL"
}
export interface GetRecommendationRequest {
    /** The set of items for which to get recommendations. Required if the `algorithmType` is `RELATED_ITEMS`. */
    items?: CatalogReference[];
    /**
     * A list of algorithms checked in a specific order determined by their `appID` and their position in the `algorithms` array.
     * See the method description for more information.
     *
     * If no algorithm is able to return at least `minimumRecommendedItems` items, an empty array is returned.
     */
    algorithms: Algorithm[];
    /**
     * The minimum number of items that must be recommended by the algorithm for those items to be returned in the response.
     *
     * Max: `100`
     */
    minimumRecommendedItems?: number;
}
export interface GetRecommendationResponse {
    /** An object containing a list of items recommended by 1 of the specified algorithms. The recommendation is empty if none of the specified algorithms recommended enough items. */
    recommendation?: Recommendation;
}
export interface ItemAppIdNotSupportedByProvider {
    /** Items with an App ID not supported by the provider. Supported App IDs can be found in the provider config in the Dev Center. */
    items?: CatalogReference[];
    /** Algorithms that don't support the requested items. */
    algorithms?: Algorithm[];
}
export interface RecommendationAlgorithmNotSupported {
    /** Algorithms not supported by the provider. */
    unsupportedAlgorithms?: Algorithm[];
}
interface AlgorithmConfigNonNullableFields {
    name: string;
    description: string;
    algorithmType: AlgorithmType;
    algorithmId: string;
}
interface AlgorithmInfoNonNullableFields {
    config?: AlgorithmConfigNonNullableFields;
    appId: string;
    catalogAppIds: string[];
}
export interface ListAvailableAlgorithmsResponseNonNullableFields {
    availableAlgorithms: AlgorithmInfoNonNullableFields[];
}
interface CatalogReferenceNonNullableFields {
    catalogItemId: string;
    appId: string;
}
interface AlgorithmNonNullableFields {
    id: string;
    appId: string;
}
interface RecommendationNonNullableFields {
    items: CatalogReferenceNonNullableFields[];
    algorithm?: AlgorithmNonNullableFields;
}
export interface GetRecommendationResponseNonNullableFields {
    recommendation?: RecommendationNonNullableFields;
}
export {};
