export interface GiftCard {
    /**
     * Gift card obfuscated code.
     *
     * For example: "****-****-****-1234".
     */
    obfuscatedCode?: string;
    /** Gift card balance. */
    balance?: Money;
    /** Current gift card status. */
    status?: Status;
    /** App ID of the gift card provider, as returned in eCommerce Get Checkout or List Transactions for Single Order. */
    appId?: string;
    /**
     * External ID in the gift card provider's system.
     * Used for integration and tracking across different platforms.
     */
    externalId?: string | null;
}
export interface Money {
    /** Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative. */
    value?: string;
    /** Currency code. Must be valid ISO 4217 currency code (e.g., USD). */
    currency?: string;
}
export declare enum Status {
    UNKNOWN_STATUS = "UNKNOWN_STATUS",
    /** Gift card is active and can be used for purchases. */
    VALID = "VALID",
    /** Gift card expiration date has passed and can no longer be used. */
    EXPIRED = "EXPIRED",
    /** Gift card has been disabled by the merchant and can no longer be used. */
    DISABLED = "DISABLED"
}
export interface GetGiftCardRequest {
    /** Gift card code. */
    code: string;
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
export interface Context {
    /** Physical location ID. Can be based on the Locations API or an external provider. */
    locationId?: string | null;
}
export interface GetGiftCardResponse {
    /** Retrieved gift card. */
    giftCard?: GiftCard;
}
export interface RedeemGiftCardRequest {
    /** Gift card code. */
    code: string;
    /** Amount to redeem from the gift card. */
    amount: Money;
    /** Order ID to apply the gift card transaction, when applying a gift card after order creation. Order ID can be collected from the eCommerce Order Created webhook or by calling eCommerce Search Orders. */
    orderId?: string;
    /** App ID of the gift card provider. */
    appId: string;
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
export interface RedeemGiftCardResponse {
    /** Gift card transaction ID. */
    transactionId?: string;
}
export interface VoidTransactionRequest {
    /** Gift card transaction ID, as returned from Redeem Gift Card. */
    transactionId: string;
    /** App ID of the gift card provider. */
    appId: string;
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
export interface VoidTransactionResponse {
}
interface MoneyNonNullableFields {
    value: string;
    currency: string;
}
interface GiftCardNonNullableFields {
    obfuscatedCode: string;
    balance?: MoneyNonNullableFields;
    status: Status;
    appId: string;
}
export interface GetGiftCardResponseNonNullableFields {
    giftCard?: GiftCardNonNullableFields;
}
export interface RedeemGiftCardResponseNonNullableFields {
    transactionId: string;
}
/**
 * Retrieves a gift card.
 * @param code - Gift card code.
 * @public
 * @documentationMaturity preview
 * @requiredField code
 * @param options - Field options.
 * @permissionId ECOM.GIFT_CARD_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read Gift Cards
 * @permissionScopeId SCOPE.ECOM.READ-GIFT-CARDS
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @fqn wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.GetGiftCard
 */
export declare function getGiftCard(code: string, options?: GetGiftCardOptions): Promise<GetGiftCardResponse & GetGiftCardResponseNonNullableFields>;
export interface GetGiftCardOptions {
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
/**
 * Redeems a gift card.
 * Creates a transaction and lowers the card balance by the transaction amount.
 * @param code - Gift card code.
 * @public
 * @documentationMaturity preview
 * @requiredField code
 * @requiredField options.amount
 * @requiredField options.amount.value
 * @requiredField options.appId
 * @param options - Field options. `amount` and `appId` **must** be passed.
 * @permissionId ECOM.GIFT_CARD_REDEEM
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Change Gift Card Balances
 * @permissionScopeId SCOPE.ECOM.CHANGE-GIFT-CARDS-BALANCE
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @fqn wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.RedeemGiftCard
 */
export declare function redeemGiftCard(code: string, options?: RedeemGiftCardOptions): Promise<RedeemGiftCardResponse & RedeemGiftCardResponseNonNullableFields>;
export interface RedeemGiftCardOptions {
    /** Amount to redeem from the gift card. */
    amount: Money;
    /** Order ID to apply the gift card transaction, when applying a gift card after order creation. Order ID can be collected from the eCommerce Order Created webhook or by calling eCommerce Search Orders. */
    orderId?: string;
    /** App ID of the gift card provider. */
    appId: string;
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
/**
 * Voids a gift card transaction.
 * Transaction IDs are returned in Redeem Gift Card.
 * @param transactionId - Gift card transaction ID, as returned from Redeem Gift Card.
 * @public
 * @documentationMaturity preview
 * @requiredField options.appId
 * @requiredField transactionId
 * @param options - Field options. `appId` **must** be passed.
 * @permissionId ECOM.GIFT_CARD_TRANSACTION_VOID
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Change Gift Card Balances
 * @permissionScopeId SCOPE.ECOM.CHANGE-GIFT-CARDS-BALANCE
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @fqn wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.VoidTransaction
 */
export declare function voidTransaction(transactionId: string, options?: VoidTransactionOptions): Promise<void>;
export interface VoidTransactionOptions {
    /** App ID of the gift card provider. */
    appId: string;
    /** Contextual information for the request, including the physical location ID if applicable. */
    context?: Context;
}
export {};
