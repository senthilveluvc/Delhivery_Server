import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Prepares payment collection for given ecom order. This is the first of 2-step process of payment collection.
 * Here we ensure that payment collection is possible for given order and store and prepare payment gateway order for future charge.
 * 2nd step is an actual charge of prepared payment gateway order. This could be done either
 * via Wix-Cashier's API (https://bo.wix.com/wix-docs/rest/wix-cashier/pay/charge/charge-for-order)
 * or using Cashier Payments Widget (https://github.com/wix-private/cashier-client/tree/master/packages/cashier-payments-widget)
 */
export declare function preparePaymentCollection(payload: object): RequestOptionsFactory<any>;
/**
 * Provides payment collectability status for given order. If payment collection is possible
 * response will contain collectable amount for given ecom order. If not - response will contain
 * reason why payment collection is not possible.
 */
export declare function getPaymentCollectabilityStatus(payload: object): RequestOptionsFactory<any>;
/**
 * Void authorized payments
 * Transaction statuses for related payments will be updated in async way
 */
export declare function voidAuthorizedPayments(payload: object): RequestOptionsFactory<any>;
/**
 * Capture authorized payments
 * Transaction statuses for related payments will be updated in async way
 */
export declare function captureAuthorizedPayments(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves an order.
 *
 *
 * The `getOrder()` function returns a Promise that resolves when the specified order is retrieved.
 *
 * To retrieve an order's payment and refund details, including amounts, payment methods, and payment statuses, pass the order ID to [`listTransactionsForSingleOrder( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/listtransactionsforsingleorder).
 */
export declare function getOrder(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of orders, given the provided paging, filtering, and sorting.
 *
 *
 * Search Orders runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 * - `filter: {"status": {"$ne": "INITIALIZED"}}` - other order statuses can be queried, but orders with `status: "INITIALIZED"` are never returned
 *
 * For field support for filters and sorting, see [Orders: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-e-commerce/orders/supported-filters-and-sorting).
 *
 * To learn about working with _Search_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and
 * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
export declare function searchOrders(payload: object): RequestOptionsFactory<any>;
/**
 * Creates an order.
 *
 *
 * The `createOrder()` function returns a Promise that resolves when the order is created.
 *
 * > **Notes:**
 * > + If an item is digital - `lineItems[i].itemType.preset: DIGITAL` - then `lineItems[i].digitalFile` must be provided.
 * > + If `lineItems[i].id` is passed, it must be either a valid GUID, or empty.
 */
export declare function createOrder(payload: object): RequestOptionsFactory<any>;
/**
 * Updates an order.
 *
 *
 * The `updateOrder()` function returns a Promise that resolves when the specified order's information is updated.
 *
 * Currently, the following fields can be updated:
 * + `order.buyerInfo.email`
 * + `order.buyerLanguage`
 * + `order.weightUnit`
 * + `order.billingInfo.address`
 * + `order.billingInfo.contactDetails`
 * + `order.archived`
 * + `order.attributionSource`
 * + `order.seenByAHuman`
 * + `order.recipientInfo.address`
 * + `order.recipientInfo.contactDetails`
 * + `order.shippingInfo.logistics.shippingDestination.address`
 * + `order.shippingInfo.logistics.shippingDestination.contactDetails`
 *
 * To update a field's value, include the new value in the `order` object in the method parameters.
 * To remove a field's value, pass `null`.
 *
 * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.
 *
 * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).
 */
export declare function updateOrder(payload: object): RequestOptionsFactory<any>;
/**
 * Updates up to 100 orders.
 *
 *
 * The `bulkUpdateOrders()` function returns a Promise that resolves when the specified orders' information is updated.
 *
 * Currently, the following fields can be updated:
 * + `order.buyerInfo.email`
 * + `order.buyerLanguage`
 * + `order.weightUnit`
 * + `order.billingInfo.address`
 * + `order.billingInfo.contactDetails`
 * + `order.archived`
 * + `order.attributionSource`
 * + `order.seenByAHuman`
 * + `order.recipientInfo.address`
 * + `order.recipientInfo.contactDetails`
 * + `order.shippingInfo.logistics.shippingDestination.address`
 * + `order.shippingInfo.logistics.shippingDestination.contactDetails`
 *
 * To update a field's value, include the new value in the `orders.order` object in the method parameters.
 * To remove a field's value, pass `null`.
 *
 * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.
 *
 * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).
 */
export declare function bulkUpdateOrders(payload: object): RequestOptionsFactory<any>;
/**
 * Cancels an order.
 *
 *
 * The `cancelOrder()` function returns a Promise that resolves when the specified order is canceled and the `order.status` field changes to `CANCELED`.
 */
export declare function cancelOrder(payload: object): RequestOptionsFactory<any>;
/**
 * Synchronously update tags on multiple orders, by list of order ids
 * A tag that appears both in the list of assign and unassign tags, will be assigned
 */
export declare function bulkUpdateOrderTags(payload: object): RequestOptionsFactory<any>;
