import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { BulkUpdateOrderTagsOptions, BulkUpdateOrderTagsResponse, BulkUpdateOrderTagsResponseNonNullableFields, BulkUpdateOrdersOptions, BulkUpdateOrdersResponse, BulkUpdateOrdersResponseNonNullableFields, CancelOrderOptions, CancelOrderResponse, CancelOrderResponseNonNullableFields, CaptureAuthorizedPaymentsResponse, CaptureAuthorizedPaymentsResponseNonNullableFields, CreateOrderOptions, GetPaymentCollectabilityStatusResponse, GetPaymentCollectabilityStatusResponseNonNullableFields, MaskedOrder, Order, OrderApprovedEnvelope, OrderCanceledEnvelope, OrderCreatedEnvelope, OrderNonNullableFields, OrderUpdatedEnvelope, PaymentCapture, PreparePaymentCollectionOptions, PreparePaymentCollectionResponse, PreparePaymentCollectionResponseNonNullableFields, Price, SearchOrdersOptions, SearchOrdersResponse, SearchOrdersResponseNonNullableFields, UpdateOrder, VoidAuthorizedPaymentsResponse, VoidAuthorizedPaymentsResponseNonNullableFields } from './ecom-v1-order-orders.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function preparePaymentCollection(httpClient: HttpClient): PreparePaymentCollectionSignature;
interface PreparePaymentCollectionSignature {
    /**
     * Prepares payment collection for given ecom order. This is the first of 2-step process of payment collection.
     * Here we ensure that payment collection is possible for given order and store and prepare payment gateway order for future charge.
     * 2nd step is an actual charge of prepared payment gateway order. This could be done either
     * via Wix-Cashier's API (https://bo.wix.com/wix-docs/rest/wix-cashier/pay/charge/charge-for-order)
     * or using Cashier Payments Widget (https://github.com/wix-private/cashier-client/tree/master/packages/cashier-payments-widget)
     * @param - Ecom order ID.
     * @param - Amount to collect
     */
    (ecomOrderId: string, amount: Price, options?: PreparePaymentCollectionOptions | undefined): Promise<PreparePaymentCollectionResponse & PreparePaymentCollectionResponseNonNullableFields>;
}
export declare function getPaymentCollectabilityStatus(httpClient: HttpClient): GetPaymentCollectabilityStatusSignature;
interface GetPaymentCollectabilityStatusSignature {
    /**
     * Provides payment collectability status for given order. If payment collection is possible
     * response will contain collectable amount for given ecom order. If not - response will contain
     * reason why payment collection is not possible.
     * @param - Ecom order ID.
     */
    (ecomOrderId: string): Promise<GetPaymentCollectabilityStatusResponse & GetPaymentCollectabilityStatusResponseNonNullableFields>;
}
export declare function voidAuthorizedPayments(httpClient: HttpClient): VoidAuthorizedPaymentsSignature;
interface VoidAuthorizedPaymentsSignature {
    /**
     * Void authorized payments
     * Transaction statuses for related payments will be updated in async way
     * @param - Wix eCommerce order ID
     * @param - Payment IDs
     */
    (ecomOrderId: string, paymentIds: string[]): Promise<VoidAuthorizedPaymentsResponse & VoidAuthorizedPaymentsResponseNonNullableFields>;
}
export declare function captureAuthorizedPayments(httpClient: HttpClient): CaptureAuthorizedPaymentsSignature;
interface CaptureAuthorizedPaymentsSignature {
    /**
     * Capture authorized payments
     * Transaction statuses for related payments will be updated in async way
     * @param - Wix eCommerce order ID
     * @param - Capture payments information
     */
    (ecomOrderId: string, payments: PaymentCapture[]): Promise<CaptureAuthorizedPaymentsResponse & CaptureAuthorizedPaymentsResponseNonNullableFields>;
}
export declare function getOrder(httpClient: HttpClient): GetOrderSignature;
interface GetOrderSignature {
    /**
     * Retrieves an order.
     *
     *
     * The `getOrder()` function returns a Promise that resolves when the specified order is retrieved.
     *
     * To retrieve an order's payment and refund details, including amounts, payment methods, and payment statuses, pass the order ID to [`listTransactionsForSingleOrder( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/listtransactionsforsingleorder).
     * @param - ID of the order to retrieve.
     * @returns Fulfilled - The requested order.
     */
    (_id: string): Promise<Order & OrderNonNullableFields>;
}
export declare function searchOrders(httpClient: HttpClient): SearchOrdersSignature;
interface SearchOrdersSignature {
    /**
     * Retrieves a list of orders, given the provided paging, filtering, and sorting.
     *
     *
     * Search Orders runs with these defaults, which you can override:
     *
     * - `createdDate` is sorted in `DESC` order
     * - `cursorPaging.limit` is `100`
     * - `filter: {"status": {"$ne": "INITIALIZED"}}` - other order statuses can be queried, but orders with `status: "INITIALIZED"` are never returned
     *
     * For field support for filters and sorting, see [Orders: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-e-commerce/orders/supported-filters-and-sorting).
     *
     * To learn about working with _Search_ endpoints, see
     * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and
     * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
     */
    (options?: SearchOrdersOptions | undefined): Promise<SearchOrdersResponse & SearchOrdersResponseNonNullableFields>;
}
export declare function createOrder(httpClient: HttpClient): CreateOrderSignature;
interface CreateOrderSignature {
    /**
     * Creates an order.
     *
     *
     * The `createOrder()` function returns a Promise that resolves when the order is created.
     *
     * > **Notes:**
     * > + If an item is digital - `lineItems[i].itemType.preset: DIGITAL` - then `lineItems[i].digitalFile` must be provided.
     * > + If `lineItems[i].id` is passed, it must be either a valid GUID, or empty.
     * @param - Order info.
     * @returns Newly created order.
     */
    (order: Order, options?: CreateOrderOptions | undefined): Promise<Order & OrderNonNullableFields>;
}
export declare function updateOrder(httpClient: HttpClient): UpdateOrderSignature;
interface UpdateOrderSignature {
    /**
     * Updates an order.
     *
     *
     * The `updateOrder()` function returns a Promise that resolves when the specified order's information is updated.
     *
     * Currently, the following fields can be updated:
     * + `order.buyerInfo.email`
     * + `order.buyerLanguage`
     * + `order.weightUnit`
     * + `order.billingInfo.address`
     * + `order.billingInfo.contactDetails`
     * + `order.archived`
     * + `order.attributionSource`
     * + `order.seenByAHuman`
     * + `order.recipientInfo.address`
     * + `order.recipientInfo.contactDetails`
     * + `order.shippingInfo.logistics.shippingDestination.address`
     * + `order.shippingInfo.logistics.shippingDestination.contactDetails`
     *
     * To update a field's value, include the new value in the `order` object in the method parameters.
     * To remove a field's value, pass `null`.
     *
     * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.
     *
     * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).
     * @param - Order ID.
     * @returns Newly created order.
     */
    (_id: string | null, order: UpdateOrder): Promise<Order & OrderNonNullableFields>;
}
export declare function bulkUpdateOrders(httpClient: HttpClient): BulkUpdateOrdersSignature;
interface BulkUpdateOrdersSignature {
    /**
     * Updates up to 100 orders.
     *
     *
     * The `bulkUpdateOrders()` function returns a Promise that resolves when the specified orders' information is updated.
     *
     * Currently, the following fields can be updated:
     * + `order.buyerInfo.email`
     * + `order.buyerLanguage`
     * + `order.weightUnit`
     * + `order.billingInfo.address`
     * + `order.billingInfo.contactDetails`
     * + `order.archived`
     * + `order.attributionSource`
     * + `order.seenByAHuman`
     * + `order.recipientInfo.address`
     * + `order.recipientInfo.contactDetails`
     * + `order.shippingInfo.logistics.shippingDestination.address`
     * + `order.shippingInfo.logistics.shippingDestination.contactDetails`
     *
     * To update a field's value, include the new value in the `orders.order` object in the method parameters.
     * To remove a field's value, pass `null`.
     *
     * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.
     *
     * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).
     * @param - Orders to update.
     */
    (orders: MaskedOrder[], options?: BulkUpdateOrdersOptions | undefined): Promise<BulkUpdateOrdersResponse & BulkUpdateOrdersResponseNonNullableFields>;
}
export declare function cancelOrder(httpClient: HttpClient): CancelOrderSignature;
interface CancelOrderSignature {
    /**
     * Cancels an order.
     *
     *
     * The `cancelOrder()` function returns a Promise that resolves when the specified order is canceled and the `order.status` field changes to `CANCELED`.
     * @param - Order ID.
     */
    (_id: string, options?: CancelOrderOptions | undefined): Promise<CancelOrderResponse & CancelOrderResponseNonNullableFields>;
}
export declare function bulkUpdateOrderTags(httpClient: HttpClient): BulkUpdateOrderTagsSignature;
interface BulkUpdateOrderTagsSignature {
    /**
     * Synchronously update tags on multiple orders, by list of order ids
     * A tag that appears both in the list of assign and unassign tags, will be assigned
     * @param - IDs of orders to update tags for.
     */
    (orderIds: string[], options?: BulkUpdateOrderTagsOptions | undefined): Promise<BulkUpdateOrderTagsResponse & BulkUpdateOrderTagsResponseNonNullableFields>;
}
export declare const onOrderApproved: EventDefinition<OrderApprovedEnvelope, "wix.ecom.v1.order_approved">;
export declare const onOrderUpdated: EventDefinition<OrderUpdatedEnvelope, "wix.ecom.v1.order_updated">;
export declare const onOrderCanceled: EventDefinition<OrderCanceledEnvelope, "wix.ecom.v1.order_canceled">;
export declare const onOrderCreated: EventDefinition<OrderCreatedEnvelope, "wix.ecom.v1.order_created">;
export { ActionEvent, ActionType, Activity, ActivityContentOneOf, ActivityType, AddActivitiesRequest, AddActivitiesResponse, AddActivityRequest, AddActivityResponse, AddInternalActivityRequest, AddInternalActivityResponse, AdditionalFee, AdditionalFeeDelta, AdditionalFeeDeltaDeltaOneOf, AdditionalFeeRefund, Address, AddressDescription, AddressLocation, AddressWithContact, AggregateOrdersRequest, AggregateOrdersResponse, AggregatedRefundSummary, App, ApplicationError, AppliedDiscount, AppliedDiscountDelta, AppliedDiscountDeltaDeltaOneOf, AppliedDiscountDiscountSourceOneOf, ArchiveOrderRequest, ArchiveOrderResponse, AttributionSource, AuthorizationActionFailureDetails, AuthorizationCapture, AuthorizationCaptureStatus, AuthorizationDetails, AuthorizationVoid, AuthorizationVoidStatus, AuthorizedPaymentCaptured, AuthorizedPaymentCreated, AuthorizedPaymentVoided, Balance, BalanceSummary, BaseEventMetadata, BatchOfTriggerReindexOrderRequest, BigDecimalWrapper, BulkActionMetadata, BulkArchiveOrdersByFilterRequest, BulkArchiveOrdersByFilterResponse, BulkArchiveOrdersRequest, BulkArchiveOrdersResponse, BulkMarkAsFulfilledByFilterRequest, BulkMarkAsFulfilledByFilterResponse, BulkMarkAsFulfilledRequest, BulkMarkAsFulfilledResponse, BulkMarkAsUnfulfilledByFilterRequest, BulkMarkAsUnfulfilledByFilterResponse, BulkMarkAsUnfulfilledRequest, BulkMarkAsUnfulfilledResponse, BulkMarkOrdersAsPaidRequest, BulkMarkOrdersAsPaidResponse, BulkOrderResult, BulkSendBuyerPickupConfirmationEmailsRequest, BulkSendBuyerPickupConfirmationEmailsResponse, BulkSendBuyerShippingConfirmationEmailsRequest, BulkSendBuyerShippingConfirmationEmailsResponse, BulkSetBusinessLocationRequest, BulkSetBusinessLocationResponse, BulkSetBusinessLocationResult, BulkUnArchiveOrdersByFilterRequest, BulkUnArchiveOrdersByFilterResponse, BulkUnArchiveOrdersRequest, BulkUnArchiveOrdersResponse, BulkUpdateOrderTagsOptions, BulkUpdateOrderTagsRequest, BulkUpdateOrderTagsResponse, BulkUpdateOrderTagsResponseNonNullableFields, BulkUpdateOrderTagsResult, BulkUpdateOrdersOptions, BulkUpdateOrdersRequest, BulkUpdateOrdersResponse, BulkUpdateOrdersResponseNonNullableFields, BuyerInfo, BuyerInfoIdOneOf, BuyerInfoUpdate, CalculateRefundItemRequest, CalculateRefundItemResponse, CalculateRefundRequest, CalculateRefundResponse, CalculatedTax, CalculatedTaxes, Cancel, CancelOrderOptions, CancelOrderRequest, CancelOrderResponse, CancelOrderResponseNonNullableFields, CaptureAuthorizedPaymentsRequest, CaptureAuthorizedPaymentsResponse, CaptureAuthorizedPaymentsResponseNonNullableFields, CatalogReference, ChannelInfo, ChannelType, ChargeMembershipsRequest, ChargeMembershipsResponse, ChargeSavedPaymentMethodRequest, ChargeSavedPaymentMethodResponse, ChargedBy, Color, CommitDeltasRequest, CommitDeltasResponse, CommittedDiffs, CommittedDiffsShippingUpdateInfoOneOf, CommonAddress, CommonAddressStreetOneOf, Company, Complete, ContinueSideEffectsFlowInLegacyData, Coupon, CreateOrderOptions, CreateOrderRequest, CreateOrderResponse, CreateOrderResponseNonNullableFields, CreatePaymentGatewayOrderRequest, CreatePaymentGatewayOrderResponse, CreatedBy, CreatedByStringOneOf, CreditCardDetails, CreditCardPaymentMethodDetails, CursorPaging, CursorPagingMetadata, CursorSearch, CursorSearchPagingMethodOneOf, Cursors, CustomActivity, CustomField, CustomFieldGroup, CustomFieldValue, Customer, DecrementData, DecrementItemsQuantityRequest, DecrementItemsQuantityResponse, DelayedCaptureSettings, DeleteActivityRequest, DeleteActivityResponse, DeleteByFilterOperation, DeleteByIdsOperation, DeliveryLogistics, DeliveryLogisticsAddressOneOf, DeliveryTimeSlot, DeltaPaymentOptionType, Deposit, DepositType, DescriptionLine, DescriptionLineDescriptionLineValueOneOf, DescriptionLineName, DescriptionLineType, DescriptionLineValueOneOf, DiffmatokyPayload, DigitalFile, Discount, DiscountOneDiscountTypeOneOf, DiscountReason, DiscountRule, DiscountRuleName, DiscountType, DomainEvent, DomainEventBodyOneOf, DownloadLinkSent, DraftOrderChangesApplied, DraftOrderCommitSettings, DraftOrderDiffs, DraftOrderDiffsBillingUpdateInfoOneOf, DraftOrderDiffsBuyerUpdateInfoOneOf, DraftOrderDiffsRecipientUpdateInfoOneOf, DraftOrderDiffsShippingUpdateInfoOneOf, Duration, DurationUnit, Email, EmailEdited, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, ErrorInformation, EventMetadata, ExtendedFields, ExternalReceipt, ExternalReceiptInfo, ExternalUriMapping, FocalPoint, FreeTrialPeriod, FulfillerEmailSent, FulfillmentStatus, FulfillmentStatusUpdated, FulfillmentStatusesAggregate, FullAddressContactDetails, GetMetasiteDataRequest, GetMetasiteDataResponse, GetOrderForMetasiteRequest, GetOrderForMetasiteResponse, GetOrderRequest, GetOrderResponse, GetOrderResponseNonNullableFields, GetPaymentCollectabilityStatusRequest, GetPaymentCollectabilityStatusResponse, GetPaymentCollectabilityStatusResponseNonNullableFields, GetRefundabilityStatusRequest, GetRefundabilityStatusResponse, GetShipmentsRequest, GetShipmentsResponse, GiftCardPaymentDetails, GiftCardPaymentRefund, HtmlApplication, IdAndVersion, IdentificationData, IdentificationDataIdOneOf, IndexingMessage, InternalActivity, InternalActivityContentOneOf, InternalDocument, InternalDocumentUpdateByFilterOperation, InternalDocumentUpdateOperation, InternalQueryOrdersRequest, InternalQueryOrdersResponse, InternalUpdateExistingOperation, InventoryAction, InventoryUpdateDetails, InvoiceAdded, InvoiceDates, InvoiceDynamicPriceTotals, InvoiceFields, InvoiceSent, InvoiceSentEvent, InvoiceStatus, InvoicesPayment, ItemChangedDetails, ItemMetadata, ItemTaxFullDetails, ItemType, ItemTypeItemType, ItemTypeItemTypeDataOneOf, ItemizedFee, JurisdictionType, LineItem, LineItemAmount, LineItemChanges, LineItemDelta, LineItemDeltaDeltaOneOf, LineItemDiscount, LineItemExchangeData, LineItemMetaData, LineItemPriceChange, LineItemQuantityChange, LineItemQuantityChangeType, LineItemRefund, LineItemTax, LineItemTaxBreakdown, LineItemTaxInfo, LineItemUpdate, LineItems, ListOrderTransactionsForMetasiteRequest, ListOrderTransactionsForMetasiteResponse, Locale, Location, LocationAndQuantity, ManagedAdditionalFee, ManagedDiscount, ManagedLineItem, ManuallyRefundableReason, MarkAsFulfilledRequest, MarkAsFulfilledResponse, MarkAsUnfulfilledRequest, MarkAsUnfulfilledResponse, MarkOrderAsPaidRequest, MarkOrderAsPaidResponse, MarkOrderAsSeenByHumanRequest, MarkOrderAsSeenByHumanResponse, MaskedOrder, MaskedOrderLineItem, MembershipChargeItem, MembershipName, MembershipPaymentDetails, MembershipPaymentRefund, MembershipPaymentStatus, MerchantComment, MerchantDiscount, MerchantDiscountMerchantDiscountReasonOneOf, MessageEnvelope, MetaData, MetaSite, MetaTag, Namespace, NewExchangeOrderCreated, NonRefundableReason, Order, OrderApprovalStrategy, OrderApproved, OrderApprovedEnvelope, OrderCanceled, OrderCanceledEnvelope, OrderCanceledEventOrderCanceled, OrderChange, OrderChangeValueOneOf, OrderCreateNotifications, OrderCreatedEnvelope, OrderCreatedFromExchange, OrderCreationSettings, OrderDeltasCommitted, OrderFulfilled, OrderItemsRestocked, OrderLineItem, OrderLineItemChangedDetails, OrderNonNullableFields, OrderNotFulfilled, OrderPaid, OrderPartiallyPaid, OrderPending, OrderPlaced, OrderRefunded, OrderRejected, OrderRejectedEventOrderRejected, OrderStatus, OrderTaxBreakdown, OrderTaxInfo, OrderTransactions, OrderUpdatedEnvelope, OrdersExperiments, Payment, PaymentCanceled, PaymentCanceledPaymentDetailsOneOf, PaymentCapture, PaymentCollectabilityStatus, PaymentDeclined, PaymentDeclinedPaymentDetailsOneOf, PaymentOptionType, PaymentPaymentDetailsOneOf, PaymentPending, PaymentPendingPaymentDetailsOneOf, PaymentReceiptInfoOneOf, PaymentRefund, PaymentRefundFailed, PaymentRefunded, PaymentStatus, PaymentStatusUpdated, Payments, Phone, PhysicalProperties, PickupAddress, PickupDetails, PickupMethod, PickupReadyEmailSent, Placement, PlainTextValue, PlatformPaging, PlatformPagingMetadata, PlatformQuery, PlatformQueryPagingMethodOneOf, PreparePaymentCollectionOptions, PreparePaymentCollectionRequest, PreparePaymentCollectionResponse, PreparePaymentCollectionResponseNonNullableFields, PreviewBuyerConfirmationEmailRequest, PreviewBuyerConfirmationEmailResponse, PreviewBuyerPaymentsReceivedEmailRequest, PreviewBuyerPaymentsReceivedEmailResponse, PreviewBuyerPickupConfirmationEmailRequest, PreviewBuyerPickupConfirmationEmailResponse, PreviewCancelEmailRequest, PreviewCancelEmailResponse, PreviewCancelRefundEmailRequest, PreviewCancelRefundEmailResponse, PreviewEmailByTypeRequest, PreviewEmailByTypeResponse, PreviewEmailType, PreviewRefundEmailRequest, PreviewRefundEmailResponse, PreviewResendDownloadLinksEmailRequest, PreviewResendDownloadLinksEmailResponse, PreviewShippingConfirmationEmailRequest, PreviewShippingConfirmationEmailResponse, Price, PriceDescription, PriceSummary, ProductName, PublicActivity, PublicActivityContentOneOf, QueryOrderRequest, QueryOrderResponse, QueryOrdersForMetasiteRequest, QueryOrdersForMetasiteResponse, QuotesAddress, Reason, ReceiptCreated, ReceiptCreatedReceiptInfoOneOf, ReceiptSent, ReceiptSentReceiptInfoOneOf, RecordManuallyCollectedPaymentRequest, RecordManuallyCollectedPaymentResponse, RedirectUrls, Refund, RefundDetails, RefundInitiated, RefundItem, RefundSideEffects, RefundStatus, RefundStatusInfo, RefundTransaction, Refundability, RefundabilityAdditionalRefundabilityInfoOneOf, RefundableStatus, RefundedAsStoreCredit, RefundedPayment, RefundedPaymentKindOneOf, RegularPayment, RegularPaymentDetails, RegularPaymentDetailsPaymentMethodDetailsOneOf, RegularPaymentPaymentMethodDetailsOneOf, RegularPaymentRefund, Reschedule, RestockInfo, RestockItem, RestockType, RestoreInfo, SavedPaymentMethod, ScheduledAction, SearchOrdersOptions, SearchOrdersRequest, SearchOrdersResponse, SearchOrdersResponseNonNullableFields, SendBuyerConfirmationEmailRequest, SendBuyerConfirmationEmailResponse, SendBuyerPaymentsReceivedEmailRequest, SendBuyerPaymentsReceivedEmailResponse, SendBuyerPickupConfirmationEmailRequest, SendBuyerPickupConfirmationEmailResponse, SendBuyerShippingConfirmationEmailRequest, SendBuyerShippingConfirmationEmailResponse, SendCancelRefundEmailRequest, SendCancelRefundEmailResponse, SendMerchantOrderReceivedNotificationRequest, SendMerchantOrderReceivedNotificationResponse, SendMerchantOrderReceivedPushRequest, SendMerchantOrderReceivedPushResponse, SendRefundEmailRequest, SendRefundEmailResponse, SeoData, ServiceProperties, ShippingAddressEdited, ShippingConfirmationEmailSent, ShippingInformation, ShippingInformationChange, ShippingPrice, ShippingRefund, ShippingRegion, SnapshotMessage, SortOrder, Sorting, Source, SourceType, StandardDetails, State, StreetAddress, Subdivision, SubdivisionType, SubscriptionFrequency, SubscriptionInfo, SubscriptionSettings, TagList, Tags, Task, TaskAction, TaskActionActionOneOf, TaskKey, TaxSummary, TaxableAddress, TaxableAddressTaxableAddressDataOneOf, TaxableAddressType, TotalPrice, TotalPriceChange, TrackingLinkAdded, TrackingNumberAdded, TrackingNumberEdited, TransactionStatus, TranslatedValue, TriggerRefundRequest, TriggerRefundResponse, TriggerReindexOrderRequest, TriggerReindexRequest, TriggerReindexResponse, TriggerSideEffectsFromLegacyData, UnArchiveOrderRequest, UnArchiveOrderResponse, UpdateActivityRequest, UpdateActivityResponse, UpdateBillingContactDetailsRequest, UpdateBillingContactDetailsResponse, UpdateBuyerEmailRequest, UpdateBuyerEmailResponse, UpdateBuyerInfoRequest, UpdateBuyerInfoResponse, UpdateInternalDocumentsEvent, UpdateInternalDocumentsEventOperationOneOf, UpdateLineItemsDescriptionLinesRequest, UpdateLineItemsDescriptionLinesResponse, UpdateOrder, UpdateOrderLineItemRequest, UpdateOrderLineItemResponse, UpdateOrderLineItemsRequest, UpdateOrderLineItemsResponse, UpdateOrderRequest, UpdateOrderResponse, UpdateOrderResponseNonNullableFields, UpdateOrderShippingAddressRequest, UpdateOrderShippingAddressResponse, UpdateOrderStatusRequest, UpdateOrderStatusResponse, UpsertRefundRequest, UpsertRefundResponse, UserDataResponse, V1BulkMarkOrdersAsPaidRequest, V1BulkMarkOrdersAsPaidResponse, V1CreatePaymentGatewayOrderRequest, V1CreatePaymentGatewayOrderResponse, V1LineItemDelta, V1LineItemDeltaDeltaOneOf, V1MarkOrderAsPaidRequest, V1MarkOrderAsPaidResponse, V1RestockItem, V1ScheduledAction, V1ShippingInformation, Value, ValueType, VatId, VatType, VersionedDeleteByIdsOperation, VersionedDocumentId, VersionedDocumentUpdateOperation, VersioningMode, VoidAuthorizedPaymentsRequest, VoidAuthorizedPaymentsResponse, VoidAuthorizedPaymentsResponseNonNullableFields, WebhookIdentityType, WeightUnit, WixReceipt, WixReceiptInfo, } from './ecom-v1-order-orders.universal.js';
