"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.provideHandlers = void 0;
const sdk_types_1 = require("@wix/sdk-types");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rename_all_nested_keys_1 = require("@wix/sdk-runtime/rename-all-nested-keys");
exports.provideHandlers = (0, sdk_types_1.ServicePluginDefinition)('GIFT_CARDS_PROVIDER', [
    {
        name: 'getBalance',
        primaryHttpMappingPath: '/v1/balance',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = (0, transform_paths_1.transformPaths)(payload, [
                    {
                        transformFn: float_1.transformSDKFloatToRESTFloat,
                        paths: [{ path: 'balance' }],
                    },
                ]);
                return (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(fromRestRequest);
            },
        },
    },
    {
        name: 'redeem',
        primaryHttpMappingPath: '/v1/redeem',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = (0, transform_paths_1.transformPaths)(payload, [
                    {
                        transformFn: float_1.transformSDKFloatToRESTFloat,
                        paths: [{ path: 'remainingBalance' }],
                    },
                ]);
                return (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = (0, transform_paths_1.transformPaths)(payload, [
                    {
                        transformFn: float_2.transformRESTFloatToSDKFloat,
                        paths: [{ path: 'request.amount' }],
                    },
                ]);
                return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(fromRestRequest);
            },
        },
    },
    {
        name: '_void',
        primaryHttpMappingPath: '/v1/void',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = (0, transform_paths_1.transformPaths)(payload, [
                    {
                        transformFn: float_1.transformSDKFloatToRESTFloat,
                        paths: [{ path: 'remainingBalance' }],
                    },
                ]);
                return (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(fromRestRequest);
            },
        },
    },
]);
//# sourceMappingURL=interfaces-ecom-v1-gift-card-provider-entity.public.js.map