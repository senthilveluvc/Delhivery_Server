import { ListEligibleMembershipsResponse, ChargeMembershipResponse, GetMembershipVoidabilityResponse, VoidMembershipChargeResponse } from './src/service-plugins-types.js';
import { ListEligibleMembershipsEnvelope, ChargeMembershipEnvelope, GetMembershipVoidabilityEnvelope, VoidMembershipChargeEnvelope } from './src/interfaces-ecom-v1-memberships-provider.public.js';
export * from './src/service-plugins-error-classes';
export * from './src/service-plugins-types';
export { ListEligibleMembershipsEnvelope, ChargeMembershipEnvelope, GetMembershipVoidabilityEnvelope, VoidMembershipChargeEnvelope, };
/**
 * This method retrieves eligible memberships from your app.
 * @throws InvalidSelectionWixError
 */
export declare function listEligibleMemberships(payload: ListEligibleMembershipsEnvelope): ListEligibleMembershipsResponse | Promise<ListEligibleMembershipsResponse>;
/**
 * This method requests that a membership be charged by your app.
 * @throws MembershipDoesNotApplyToItemWixError
 * @throws MembershipCannotBeUsedWixError
 * @throws MembershipAlreadyChargedWixError
 */
export declare function chargeMembership(payload: ChargeMembershipEnvelope): ChargeMembershipResponse | Promise<ChargeMembershipResponse>;
/**
 * This method retrieves from your app whether a membership can be voided.
 * @throws TransactionNotFoundWixError
 */
export declare function getMembershipVoidability(payload: GetMembershipVoidabilityEnvelope): GetMembershipVoidabilityResponse | Promise<GetMembershipVoidabilityResponse>;
/**
 * This method requests that a membership charge be voided by your app.
 * @throws TransactionNotFoundWixError
 * @throws TransactionCannotBeVoidedWixError
 * @throws TransactionAlreadyVoidedWixError
 */
export declare function voidMembershipCharge(payload: VoidMembershipChargeEnvelope): VoidMembershipChargeResponse | Promise<VoidMembershipChargeResponse>;
