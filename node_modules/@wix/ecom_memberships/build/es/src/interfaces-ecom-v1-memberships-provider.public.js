import { ServicePluginDefinition } from '@wix/sdk-types';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
export const provideHandlers = ServicePluginDefinition('ECOM_MEMBERSHIPS', [
    {
        name: 'listEligibleMemberships',
        primaryHttpMappingPath: '/v1/list-eligible-memberships',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = transformPaths(payload, [
                    {
                        transformFn: transformSDKTimestampToRESTTimestamp,
                        paths: [
                            { path: 'eligibleMemberships.expirationDate' },
                            { path: 'invalidMemberships.membership.expirationDate' },
                        ],
                    },
                ]);
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = transformPaths(payload, [
                    {
                        transformFn: transformRESTTimestampToSDKTimestamp,
                        paths: [
                            { path: 'request.lineItems.serviceProperties.scheduledDate' },
                        ],
                    },
                ]);
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'chargeMembership',
        primaryHttpMappingPath: '/v1/charge-membership',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = transformPaths(payload, [
                    {
                        transformFn: transformRESTTimestampToSDKTimestamp,
                        paths: [{ path: 'request.serviceProperties.scheduledDate' }],
                    },
                ]);
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'getMembershipVoidability',
        primaryHttpMappingPath: '/v1/get-voidability',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'voidMembershipCharge',
        primaryHttpMappingPath: '/v1/void-membership-charge',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
]);
//# sourceMappingURL=interfaces-ecom-v1-memberships-provider.public.js.map