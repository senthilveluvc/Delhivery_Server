import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { ShippingOption, ShippingOptionCreatedEnvelope, ShippingOptionDeletedEnvelope, ShippingOptionNonNullableFields, ShippingOptionUpdatedEnvelope, ShippingOptionsQueryBuilder, UpdateExtendedFieldsOptions, UpdateExtendedFieldsResponse, UpdateExtendedFieldsResponseNonNullableFields, UpdateShippingOption } from './ecom-v1-shipping-option-shipping-options.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createShippingOption(httpClient: HttpClient): CreateShippingOptionSignature;
interface CreateShippingOptionSignature {
    /**
     * Creates a ShippingOption.
     *
     * The request body must include shipping option and delivery region associated to.
     * @param - ShippingOption to be created.
     * @returns The created ShippingOption.
     */
    (shippingOption: ShippingOption): Promise<ShippingOption & ShippingOptionNonNullableFields>;
}
export declare function getShippingOption(httpClient: HttpClient): GetShippingOptionSignature;
interface GetShippingOptionSignature {
    /**
     * Retrieves a ShippingOption.
     * @param - ID of the ShippingOption to retrieve.
     * @returns The requested ShippingOption.
     */
    (shippingOptionId: string): Promise<ShippingOption & ShippingOptionNonNullableFields>;
}
export declare function updateShippingOption(httpClient: HttpClient): UpdateShippingOptionSignature;
interface UpdateShippingOptionSignature {
    /**
     * Updates a ShippingOption.
     *
     *
     * Each time the ShippingOption is updated,
     * `revision` increments by 1.
     * The current `revision` must be passed when updating the ShippingOption.
     * This ensures you're working with the latest ShippingOption
     * and prevents unintended overwrites.
     * @param - ShippingOption ID.
     * @returns Updated ShippingOption.
     */
    (_id: string | null, shippingOption: UpdateShippingOption): Promise<ShippingOption & ShippingOptionNonNullableFields>;
}
export declare function deleteShippingOption(httpClient: HttpClient): DeleteShippingOptionSignature;
interface DeleteShippingOptionSignature {
    /**
     * Deletes a ShippingOption.
     * Deleting a ShippingOption permanently removes them from the ShippingOption List.
     * @param - Id of the ShippingOption to delete.
     */
    (shippingOptionId: string): Promise<void>;
}
export declare function queryShippingOptions(httpClient: HttpClient): QueryShippingOptionsSignature;
interface QueryShippingOptionsSignature {
    /**
     * Retrieves a list of ShippingOptions, given the provided [paging, filtering, and sorting][1].
     *
     * Up to 1,000 ShippingOptions can be returned per request.
     *
     * To learn how to query ShippingOptions, see [API Query Language][2].
     *
     * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging
     * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language
     */
    (): ShippingOptionsQueryBuilder;
}
export declare function updateExtendedFields(httpClient: HttpClient): UpdateExtendedFieldsSignature;
interface UpdateExtendedFieldsSignature {
    /**
     * Updates extended fields of a ShippingOption without incrementing revision
     * @param - ID of the entity to update.
     * @param - Identifier for the app whose extended fields are being updated.
     */
    (_id: string, namespace: string, options: UpdateExtendedFieldsOptions): Promise<UpdateExtendedFieldsResponse & UpdateExtendedFieldsResponseNonNullableFields>;
}
export declare const onShippingOptionCreated: EventDefinition<ShippingOptionCreatedEnvelope, "wix.ecom.v1.shipping_option_created">;
export declare const onShippingOptionDeleted: EventDefinition<ShippingOptionDeletedEnvelope, "wix.ecom.v1.shipping_option_deleted">;
export declare const onShippingOptionUpdated: EventDefinition<ShippingOptionUpdatedEnvelope, "wix.ecom.v1.shipping_option_updated">;
export { ActionEvent, BaseEventMetadata, Condition, ConditionType, ConditionalRates, CreateShippingOptionRequest, CreateShippingOptionResponse, CreateShippingOptionResponseNonNullableFields, CursorPaging, CursorPagingMetadata, CursorQuery, CursorQueryPagingMethodOneOf, Cursors, DeleteShippingOptionRequest, DeleteShippingOptionResponse, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, ExtendedFields, GetShippingOptionRequest, GetShippingOptionResponse, GetShippingOptionResponseNonNullableFields, IdentificationData, IdentificationDataIdOneOf, LogicalOperator, MessageEnvelope, QueryShippingOptionsRequest, QueryShippingOptionsResponse, QueryShippingOptionsResponseNonNullableFields, RestoreInfo, ShippingOption, ShippingOptionCreatedEnvelope, ShippingOptionDeletedEnvelope, ShippingOptionNonNullableFields, ShippingOptionUpdatedEnvelope, ShippingOptionsQueryBuilder, ShippingOptionsQueryResult, SortOrder, Sorting, UpdateExtendedFieldsOptions, UpdateExtendedFieldsRequest, UpdateExtendedFieldsResponse, UpdateExtendedFieldsResponseNonNullableFields, UpdateShippingOption, UpdateShippingOptionRequest, UpdateShippingOptionResponse, UpdateShippingOptionResponseNonNullableFields, WebhookIdentityType, } from './ecom-v1-shipping-option-shipping-options.universal.js';
