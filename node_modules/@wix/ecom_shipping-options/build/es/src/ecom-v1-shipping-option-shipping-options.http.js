import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixEcomDeliveryV1ShippingOptionServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/shipping-option-service',
                destPath: '',
            },
            {
                srcPath: '/_api/shipping-option-service',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/shipping-options',
                destPath: '/v1/shipping-options',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_shipping-options';
/**
 * Creates a ShippingOption.
 *
 * The request body must include shipping option and delivery region associated to.
 */
export function createShippingOption(payload) {
    function __createShippingOption({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'shippingOption.createdDate' },
                    { path: 'shippingOption.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.CreateShippingOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippingOption.createdDate' },
                        { path: 'shippingOption.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createShippingOption;
}
/** Retrieves a ShippingOption. */
export function getShippingOption(payload) {
    function __getShippingOption({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'GET',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.GetShippingOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options/{shippingOptionId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippingOption.createdDate' },
                        { path: 'shippingOption.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getShippingOption;
}
/**
 * Updates a ShippingOption.
 *
 *
 * Each time the ShippingOption is updated,
 * `revision` increments by 1.
 * The current `revision` must be passed when updating the ShippingOption.
 * This ensures you're working with the latest ShippingOption
 * and prevents unintended overwrites.
 */
export function updateShippingOption(payload) {
    function __updateShippingOption({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'shippingOption.createdDate' },
                    { path: 'shippingOption.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'PATCH',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.UpdateShippingOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options/{shippingOption.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippingOption.createdDate' },
                        { path: 'shippingOption.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateShippingOption;
}
/**
 * Deletes a ShippingOption.
 * Deleting a ShippingOption permanently removes them from the ShippingOption List.
 */
export function deleteShippingOption(payload) {
    function __deleteShippingOption({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'DELETE',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.DeleteShippingOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options/{shippingOptionId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteShippingOption;
}
/**
 * Retrieves a list of ShippingOptions, given the provided [paging, filtering, and sorting][1].
 *
 * Up to 1,000 ShippingOptions can be returned per request.
 *
 * To learn how to query ShippingOptions, see [API Query Language][2].
 *
 * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging
 * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language
 */
export function queryShippingOptions(payload) {
    function __queryShippingOptions({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.QueryShippingOptions',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippingOptions.createdDate' },
                        { path: 'shippingOptions.updatedDate' },
                    ],
                },
            ]),
            fallback: [
                {
                    method: 'POST',
                    url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                        protoPath: '/v1/shipping-options/query',
                        data: payload,
                        host,
                    }),
                    data: payload,
                },
            ],
        };
        return metadata;
    }
    return __queryShippingOptions;
}
/** Updates extended fields of a ShippingOption without incrementing revision */
export function updateExtendedFields(payload) {
    function __updateExtendedFields({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shipping_option',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippingOptionService.UpdateExtendedFields',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
                protoPath: '/v1/shipping-options/{id}/update-extended-fields',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippingOption.createdDate' },
                        { path: 'shippingOption.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateExtendedFields;
}
//# sourceMappingURL=ecom-v1-shipping-option-shipping-options.http.js.map