import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { BulkCreateFulfillmentResponse, BulkCreateFulfillmentResponseNonNullableFields, BulkCreateOrderWithFulfillments, CreateFulfillmentResponse, CreateFulfillmentResponseNonNullableFields, DeleteFulfillmentIdentifiers, DeleteFulfillmentResponse, DeleteFulfillmentResponseNonNullableFields, Fulfillment, FulfillmentsUpdatedEnvelope, ListFulfillmentsForMultipleOrdersResponse, ListFulfillmentsForMultipleOrdersResponseNonNullableFields, ListFulfillmentsForSingleOrderResponse, ListFulfillmentsForSingleOrderResponseNonNullableFields, OrderWithFulfillments, OrderWithFulfillmentsNonNullableFields, UpdateFulfillmentIdentifiers, UpdateFulfillmentOptions } from './ecom-v1-fulfillments-order-fulfillments.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function listFulfillmentsForSingleOrder(httpClient: HttpClient): ListFulfillmentsForSingleOrderSignature;
interface ListFulfillmentsForSingleOrderSignature {
    /**
     * Retrieves fulfillments associated with a specified order.
     *
     *
     * The `listFulfillmentsForSingleOrder()` function returns a Promise that resolves when the fulfillments are retrieved.
     * @param - Order ID for which to retrieve fulfillments.
     */
    (orderId: string): Promise<ListFulfillmentsForSingleOrderResponse & ListFulfillmentsForSingleOrderResponseNonNullableFields>;
}
export declare function listFulfillmentsForMultipleOrders(httpClient: HttpClient): ListFulfillmentsForMultipleOrdersSignature;
interface ListFulfillmentsForMultipleOrdersSignature {
    /**
     * Retrieves fulfillments associated with multiple specified orders.
     *
     *
     * The `listFulfillmentsForMultipleOrders()` function returns a Promise that resolves when the fulfillments are retrieved.
     * @param - List of order IDs for which to retrieve fulfillments.
     */
    (orderIds: string[]): Promise<ListFulfillmentsForMultipleOrdersResponse & ListFulfillmentsForMultipleOrdersResponseNonNullableFields>;
}
export declare function createFulfillment(httpClient: HttpClient): CreateFulfillmentSignature;
interface CreateFulfillmentSignature {
    /**
     * Creates an order fulfillment.
     *
     *
     * The `createFulfillment()` function returns a Promise that resolves when the fulfillment is created.
     * @param - Order ID.
     * @param - Fulfillment info.
     */
    (orderId: string, fulfillment: Fulfillment): Promise<CreateFulfillmentResponse & CreateFulfillmentResponseNonNullableFields>;
}
export declare function updateFulfillment(httpClient: HttpClient): UpdateFulfillmentSignature;
interface UpdateFulfillmentSignature {
    /**
     * Updates a fulfillment's properties.
     * To update a field's value, include the new value in the `fulfillment` field in the body params.
     * To remove a field's value, pass `null`.
     *
     *
     * The `updateFulfillment()` function returns a Promise that resolves when the fulfillment is updated.
     *
     * > **Note:** Updating line item IDs or fulfilled quantities is not allowed. To update line item IDs or quantities, delete the fulfillment and create it again.
     * @param - Order and fulfillment IDs to be updated.
     * @param - Available options to use when updating a fulfillment.
     * @returns Order ID and the orders' associated fulfillments after update.
     */
    (identifiers: UpdateFulfillmentIdentifiers, options?: UpdateFulfillmentOptions | undefined): Promise<OrderWithFulfillments & OrderWithFulfillmentsNonNullableFields>;
}
export declare function deleteFulfillment(httpClient: HttpClient): DeleteFulfillmentSignature;
interface DeleteFulfillmentSignature {
    /**
     * Deletes an existing order fulfillment.
     *
     *
     * The `deleteFulfillment()` function returns a Promise that resolves when the fulfillment is deleted.
     * @param - Order and fulfillment IDs.
     */
    (identifiers: DeleteFulfillmentIdentifiers): Promise<DeleteFulfillmentResponse & DeleteFulfillmentResponseNonNullableFields>;
}
export declare function bulkCreateFulfillments(httpClient: HttpClient): BulkCreateFulfillmentsSignature;
interface BulkCreateFulfillmentsSignature {
    /**
     * Creates multiple fulfillments for one or more orders.
     *
     *
     * The `bulkCreateFulfillments()` function returns a Promise that resolves when the fulfillments are created.
     * @param - List of order IDs and their associated fulfillments' info.
     */
    (ordersWithFulfillments: BulkCreateOrderWithFulfillments[]): Promise<BulkCreateFulfillmentResponse & BulkCreateFulfillmentResponseNonNullableFields>;
}
export declare const onFulfillmentsUpdated: EventDefinition<FulfillmentsUpdatedEnvelope, "wix.ecom.v1.fulfillments_updated">;
export { ActionEvent, ApplicationError, BaseEventMetadata, BulkActionMetadata, BulkCreateFulfillmentRequest, BulkCreateFulfillmentResponse, BulkCreateFulfillmentResponseNonNullableFields, BulkCreateOrderWithFulfillments, BulkOrderFulfillmentsResult, BuyerInfo, CreateFulfillmentRequest, CreateFulfillmentResponse, CreateFulfillmentResponseNonNullableFields, CustomFulfillmentInfo, DeleteFulfillmentIdentifiers, DeleteFulfillmentRequest, DeleteFulfillmentResponse, DeleteFulfillmentResponseNonNullableFields, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, Fulfillment, FulfillmentCreated, FulfillmentDeleted, FulfillmentFulfillmentInfoOneOf, FulfillmentLineItem, FulfillmentStatus, FulfillmentTrackingInfo, FulfillmentUpdated, FulfillmentsUpdatedEnvelope, IdentificationData, IdentificationDataIdOneOf, IdentityType, ItemMetadata, ListFulfillmentsForMultipleOrdersRequest, ListFulfillmentsForMultipleOrdersResponse, ListFulfillmentsForMultipleOrdersResponseNonNullableFields, ListFulfillmentsForSingleOrderRequest, ListFulfillmentsForSingleOrderResponse, ListFulfillmentsForSingleOrderResponseNonNullableFields, MessageEnvelope, OrderWithFulfillments, OrderWithFulfillmentsNonNullableFields, RestoreInfo, UpdateFulfillmentIdentifiers, UpdateFulfillmentOptions, UpdateFulfillmentRequest, UpdateFulfillmentResponse, UpdateFulfillmentResponseNonNullableFields, V2FulfillmentTrackingInfo, WebhookIdentityType, } from './ecom-v1-fulfillments-order-fulfillments.universal.js';
