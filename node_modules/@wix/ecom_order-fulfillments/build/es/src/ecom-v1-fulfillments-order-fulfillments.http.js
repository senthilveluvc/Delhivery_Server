import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl(opts) {
    const domainToMappings = {
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/fulfillments',
                destPath: '/v1/fulfillments',
            },
        ],
        _: [
            {
                srcPath: '/_api/fulfillments',
                destPath: '',
            },
            {
                srcPath: '/_api/ecom-fulfillments',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/fulfillments/v1/fulfillments',
                destPath: '/v1/fulfillments',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_order-fulfillments';
/**
 * Retrieves fulfillments associated with a specified order.
 *
 *
 * The `listFulfillmentsForSingleOrder()` function returns a Promise that resolves when the fulfillments are retrieved.
 */
export function listFulfillmentsForSingleOrder(payload) {
    function __listFulfillmentsForSingleOrder({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'GET',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.ListFulfillmentsForSingleOrder',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/orders/{orderId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'orderWithFulfillments.fulfillments.createdDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __listFulfillmentsForSingleOrder;
}
/**
 * Retrieves fulfillments associated with multiple specified orders.
 *
 *
 * The `listFulfillmentsForMultipleOrders()` function returns a Promise that resolves when the fulfillments are retrieved.
 */
export function listFulfillmentsForMultipleOrders(payload) {
    function __listFulfillmentsForMultipleOrders({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'POST',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.ListFulfillmentsForMultipleOrders',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/list-by-ids',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ordersWithFulfillments.fulfillments.createdDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listFulfillmentsForMultipleOrders;
}
/**
 * Creates an order fulfillment.
 *
 *
 * The `createFulfillment()` function returns a Promise that resolves when the fulfillment is created.
 */
export function createFulfillment(payload) {
    function __createFulfillment({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'fulfillment.createdDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'POST',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.CreateFulfillment',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/orders/{orderId}/create-fulfillment',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'orderWithFulfillments.fulfillments.createdDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __createFulfillment;
}
/**
 * Updates a fulfillment's properties.
 * To update a field's value, include the new value in the `fulfillment` field in the body params.
 * To remove a field's value, pass `null`.
 *
 *
 * The `updateFulfillment()` function returns a Promise that resolves when the fulfillment is updated.
 *
 * > **Note:** Updating line item IDs or fulfilled quantities is not allowed. To update line item IDs or quantities, delete the fulfillment and create it again.
 */
export function updateFulfillment(payload) {
    function __updateFulfillment({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'fulfillment.createdDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'PATCH',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.UpdateFulfillment',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/{fulfillment.id}/orders/{orderId}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'orderWithFulfillments.fulfillments.createdDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __updateFulfillment;
}
/**
 * Deletes an existing order fulfillment.
 *
 *
 * The `deleteFulfillment()` function returns a Promise that resolves when the fulfillment is deleted.
 */
export function deleteFulfillment(payload) {
    function __deleteFulfillment({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'DELETE',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.DeleteFulfillment',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/{fulfillmentId}/orders/{orderId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'orderWithFulfillments.fulfillments.createdDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __deleteFulfillment;
}
/**
 * Creates multiple fulfillments for one or more orders.
 *
 *
 * The `bulkCreateFulfillments()` function returns a Promise that resolves when the fulfillments are created.
 */
export function bulkCreateFulfillment(payload) {
    function __bulkCreateFulfillment({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'ordersWithFulfillments.fulfillments.createdDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.fulfillments',
            method: 'POST',
            methodFqn: 'com.wix.ecom.orders.fulfillments.v1.Fulfillments.BulkCreateFulfillment',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomOrdersFulfillmentsV1FulfillmentsUrl({
                protoPath: '/v1/fulfillments/orders/bulk/create-fulfillments',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        {
                            path: 'results.ordersWithFulfillments.fulfillments.createdDate',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateFulfillment;
}
//# sourceMappingURL=ecom-v1-fulfillments-order-fulfillments.http.js.map