import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTAddressToSDKAddress } from '@wix/sdk-runtime/transformations/address';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';
import { transformRESTPageURLV2ToSDKPageURLV2 } from '@wix/sdk-runtime/transformations/page-url-v2';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { createAndRedirectToCheckout as universalCreateAndRedirectToCheckout, createCheckoutFromTemplate as universalCreateCheckoutFromTemplate, createCheckoutTemplate as universalCreateCheckoutTemplate, deleteCheckoutTemplate as universalDeleteCheckoutTemplate, getCheckoutTemplate as universalGetCheckoutTemplate, queryCheckoutTemplates as universalQueryCheckoutTemplates, updateCheckoutTemplate as universalUpdateCheckoutTemplate, } from './ecom-v1-checkout-template-checkout-templates.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/ecom' };
export function createCheckoutTemplate(httpClient) {
    return (checkoutTemplate) => universalCreateCheckoutTemplate(checkoutTemplate, 
    // @ts-ignore
    { httpClient });
}
export function getCheckoutTemplate(httpClient) {
    return (checkoutTemplateId) => universalGetCheckoutTemplate(checkoutTemplateId, 
    // @ts-ignore
    { httpClient });
}
export function updateCheckoutTemplate(httpClient) {
    return (_id, checkoutTemplate) => universalUpdateCheckoutTemplate(_id, checkoutTemplate, 
    // @ts-ignore
    { httpClient });
}
export function deleteCheckoutTemplate(httpClient) {
    return (checkoutTemplateId) => universalDeleteCheckoutTemplate(checkoutTemplateId, 
    // @ts-ignore
    { httpClient });
}
export function queryCheckoutTemplates(httpClient) {
    return () => universalQueryCheckoutTemplates(
    // @ts-ignore
    { httpClient });
}
export function createCheckoutFromTemplate(httpClient) {
    return (checkoutTemplateId, siteId) => universalCreateCheckoutFromTemplate(checkoutTemplateId, siteId, 
    // @ts-ignore
    { httpClient });
}
export function createAndRedirectToCheckout(httpClient) {
    return (checkoutTemplateId, siteId) => universalCreateAndRedirectToCheckout(checkoutTemplateId, siteId, 
    // @ts-ignore
    { httpClient });
}
export const onCheckoutTemplateCreated = EventDefinition('wix.ecom.v1.checkout_template_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.lineItems.catalogOverrideFields.image' },
            { path: 'entity.customLineItems.media' },
        ],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            {
                path: 'entity.lineItems.catalogOverrideFields.physicalProperties.weight',
            },
            { path: 'entity.customLineItems.physicalProperties.weight' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'entity.customLineItems.url' }],
    },
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            {
                path: 'entity.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate',
            },
            { path: 'entity.customLineItems.serviceProperties.scheduledDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onCheckoutTemplateDeleted = EventDefinition('wix.ecom.v1.checkout_template_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'undefined.lineItems.catalogOverrideFields.image' },
            { path: 'undefined.customLineItems.media' },
        ],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            {
                path: 'undefined.lineItems.catalogOverrideFields.physicalProperties.weight',
            },
            { path: 'undefined.customLineItems.physicalProperties.weight' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'undefined.customLineItems.url' }],
    },
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            {
                path: 'undefined.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate',
            },
            {
                path: 'undefined.customLineItems.serviceProperties.scheduledDate',
            },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onCheckoutTemplateUpdated = EventDefinition('wix.ecom.v1.checkout_template_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.lineItems.catalogOverrideFields.image' },
            { path: 'entity.customLineItems.media' },
        ],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            {
                path: 'entity.lineItems.catalogOverrideFields.physicalProperties.weight',
            },
            { path: 'entity.customLineItems.physicalProperties.weight' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'entity.customLineItems.url' }],
    },
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            {
                path: 'entity.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate',
            },
            { path: 'entity.customLineItems.serviceProperties.scheduledDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onCheckoutTemplateUsed = EventDefinition('wix.ecom.v1.checkout_template_used', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            {
                path: 'data.checkoutTemplate.lineItems.catalogOverrideFields.image',
            },
            { path: 'data.checkoutTemplate.customLineItems.media' },
            { path: 'data.checkout.lineItems.media' },
            { path: 'data.checkout.lineItems.catalogOverrideFields.image' },
        ],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            {
                path: 'data.checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight',
            },
            {
                path: 'data.checkoutTemplate.customLineItems.physicalProperties.weight',
            },
            { path: 'data.checkout.lineItems.physicalProperties.weight' },
            {
                path: 'data.checkout.lineItems.catalogOverrideFields.physicalProperties.weight',
            },
            {
                path: 'data.checkout.appliedDiscounts.merchantDiscount.percentage',
            },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [
            { path: 'data.checkoutTemplate.customLineItems.url' },
            { path: 'data.checkout.lineItems.url' },
        ],
    },
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            {
                path: 'data.checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate',
            },
            {
                path: 'data.checkoutTemplate.customLineItems.serviceProperties.scheduledDate',
            },
            { path: 'data.checkout.createdDate' },
            { path: 'data.checkout.updatedDate' },
            {
                path: 'data.checkout.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate',
            },
            { path: 'data.checkout.lineItems.serviceProperties.scheduledDate' },
            {
                path: 'data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from',
            },
            {
                path: 'data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to',
            },
            {
                path: 'data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from',
            },
            {
                path: 'data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to',
            },
            {
                path: 'data.checkout.membershipOptions.eligibleMemberships.expirationDate',
            },
            {
                path: 'data.checkout.membershipOptions.invalidMemberships.membership.expirationDate',
            },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTAddressToSDKAddress,
        paths: [
            { path: 'data.checkout.billingInfo.address' },
            { path: 'data.checkout.shippingInfo.shippingDestination.address' },
            {
                path: 'data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address',
            },
            {
                path: 'data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address',
            },
        ],
    },
])))();
export { AdditionalFeeSource, ChannelType, ChargeType, DescriptionLineType, DiscountType, FallbackReason, FileType, ItemAvailabilityStatus, ItemTypeItemType, JurisdictionType, ManualCalculationReason, NameInLineItem, NameInOther, PaymentOptionType, PickupMethod, RateType, RuleType, Severity, SortOrder, Status, SubscriptionFrequency, SuggestedFix, TaxableAddressType, VatType, WebhookIdentityType, WeightUnit, } from './ecom-v1-checkout-template-checkout-templates.universal.js';
//# sourceMappingURL=ecom-v1-checkout-template-checkout-templates.public.js.map