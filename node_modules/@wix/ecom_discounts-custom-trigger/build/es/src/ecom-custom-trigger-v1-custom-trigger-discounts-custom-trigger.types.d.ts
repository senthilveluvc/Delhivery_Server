export interface CustomTrigger {
    /** Unique ID of the trigger */
    id?: string;
    /** App ID of the trigger provider */
    appId?: string;
}
export interface GetEligibleTriggersRequest {
    /** List of line items to check the custom triggers on */
    lineItems?: LineItem[];
    /** List of custom triggers to check 'is eligible' on */
    triggers?: TriggerToFilterBy[];
    /** Persistent ID that correlates between the various eCommerce elements: cart, checkout, and order. */
    purchaseFlowId?: string | null;
}
export interface LineItem {
    /** Line item ID. */
    id?: string;
    /** Item quantity in this line item. */
    quantity?: number | null;
    /**
     * Catalog and item reference. Holds IDs for the item and the catalog it came from, as well as further optional info.
     * This field may be empty in the case of a custom line item.
     */
    catalogReference?: CatalogReference;
    /** Price of a single item. */
    price?: string;
}
/** Used for grouping line items. Sent when an item is added to a cart, checkout, or order. */
export interface CatalogReference {
    /** ID of the item within the catalog it belongs to. */
    catalogItemId?: string;
    /**
     * ID of the app providing the catalog.
     *
     * You can get your app's ID from its page in the [app dashboard](https://dev.wix.com/dc3/my-apps/).
     *
     * For items from Wix catalogs, the following values always apply:
     * + Wix Stores: `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`
     * + Wix Bookings: `"13d21c63-b5ec-5912-8397-c3a5ddb27a97"`
     * + Wix Restaurants: `"9a5d83fd-8570-482e-81ab-cfa88942ee60"`
     */
    appId?: string;
    /**
     * Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The `options` field values differ depending on which catalog is providing the items.
     *
     * For products and variants from a Wix Stores catalog, learn more about [eCommerce integration](https://dev.wix.com/docs/rest/business-solutions/stores/catalog/e-commerce-integration).
     */
    options?: Record<string, any> | null;
}
export interface TriggerToFilterBy {
    /** Custom trigger */
    customTrigger?: CustomTrigger;
    /** Unique identifier that will return in `EligibleTrigger.identifier` to distinguish between scopes */
    identifier?: string | null;
}
export interface GetEligibleTriggersResponse {
    /** A List of eligible custom triggers */
    eligibleTriggers?: EligibleTrigger[];
}
export interface EligibleTrigger {
    /** The ID of the custom trigger */
    customTriggerId?: string;
    /** The id of the application implements this custom trigger */
    appId?: string;
    /** Unique identifier that was assigned in `TriggerToFilterBy.identifier` to distinguish between custom triggers */
    identifier?: string | null;
}
export interface ListTriggersRequest {
}
export interface ListTriggersResponse {
    /** A list of all custom triggers */
    triggers?: ListTriggersResponseCustomTrigger[];
}
export interface ListTriggersResponseCustomTrigger {
    /** Unique ID of the custom trigger */
    id?: string;
    /** App ID of the custom trigger provider */
    appId?: string;
    /** Custom Trigger display name */
    name?: string;
}
interface ListTriggersResponseCustomTriggerNonNullableFields {
    id: string;
    appId: string;
    name: string;
}
export interface ListTriggersResponseNonNullableFields {
    triggers: ListTriggersResponseCustomTriggerNonNullableFields[];
}
export {};
