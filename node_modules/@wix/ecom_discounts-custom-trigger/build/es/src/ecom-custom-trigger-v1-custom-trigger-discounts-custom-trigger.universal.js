import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixEcomCustomTriggerV1CustomTrigger from './ecom-custom-trigger-v1-custom-trigger-discounts-custom-trigger.http.js';
/**
 * List all custom triggers that are available on a given site
 * @public
 * @documentationMaturity preview
 * @permissionId ECOM.CUSTOM_TRIGGERS_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @fqn com.wix.ecom.custom_trigger.v1.CustomTriggersService.ListTriggers
 */
export async function listTriggers() {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[0];
    const payload = renameKeysFromSDKRequestToRESTRequest({});
    const reqOpts = ambassadorWixEcomCustomTriggerV1CustomTrigger.listTriggers(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {},
            singleArgumentUnchanged: false,
        }, []);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=ecom-custom-trigger-v1-custom-trigger-discounts-custom-trigger.universal.js.map