import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTAddressToSDKAddress } from '@wix/sdk-runtime/transformations/address';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { getSubscriptionContract as universalGetSubscriptionContract, querySubscriptionContracts as universalQuerySubscriptionContracts, } from './ecom-subscription-contracts-v1-subscription-contract-subscription-contracts.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/ecom' };
export function getSubscriptionContract(httpClient) {
    return (subscriptionContractId) => universalGetSubscriptionContract(subscriptionContractId, 
    // @ts-ignore
    { httpClient });
}
export function querySubscriptionContracts(httpClient) {
    return () => universalQuerySubscriptionContracts(
    // @ts-ignore
    { httpClient });
}
export const onSubscriptionContractCreated = EventDefinition('wix.ecom.subscription_contracts.v1.subscription_contract_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'entity.subscriptionSettings.startDate' },
            { path: 'entity.lineItems.digitalFile.expirationDate' },
            {
                path: 'entity.lineItems.subscriptionInfo.subscriptionSettings.startDate',
            },
            { path: 'entity.shippingInfo.logistics.deliverByDate' },
            { path: 'entity.shippingInfo.logistics.deliveryTimeSlot.from' },
            { path: 'entity.shippingInfo.logistics.deliveryTimeSlot.to' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'entity.lineItems.image' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [{ path: 'entity.lineItems.physicalProperties.weight' }],
    },
    {
        transformFn: transformRESTAddressToSDKAddress,
        paths: [
            { path: 'entity.billingInfo.address' },
            {
                path: 'entity.shippingInfo.logistics.shippingDestination.address',
            },
            { path: 'entity.shippingInfo.logistics.pickupDetails.address' },
            { path: 'entity.recipientInfo.address' },
        ],
    },
])))();
export const onSubscriptionContractDeleted = EventDefinition('wix.ecom.subscription_contracts.v1.subscription_contract_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'undefined.createdDate' },
            { path: 'undefined.updatedDate' },
            { path: 'undefined.subscriptionSettings.startDate' },
            { path: 'undefined.lineItems.digitalFile.expirationDate' },
            {
                path: 'undefined.lineItems.subscriptionInfo.subscriptionSettings.startDate',
            },
            { path: 'undefined.shippingInfo.logistics.deliverByDate' },
            { path: 'undefined.shippingInfo.logistics.deliveryTimeSlot.from' },
            { path: 'undefined.shippingInfo.logistics.deliveryTimeSlot.to' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'undefined.lineItems.image' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [{ path: 'undefined.lineItems.physicalProperties.weight' }],
    },
    {
        transformFn: transformRESTAddressToSDKAddress,
        paths: [
            { path: 'undefined.billingInfo.address' },
            {
                path: 'undefined.shippingInfo.logistics.shippingDestination.address',
            },
            { path: 'undefined.shippingInfo.logistics.pickupDetails.address' },
            { path: 'undefined.recipientInfo.address' },
        ],
    },
])))();
export const onSubscriptionContractUpdated = EventDefinition('wix.ecom.subscription_contracts.v1.subscription_contract_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'entity.subscriptionSettings.startDate' },
            { path: 'entity.lineItems.digitalFile.expirationDate' },
            {
                path: 'entity.lineItems.subscriptionInfo.subscriptionSettings.startDate',
            },
            { path: 'entity.shippingInfo.logistics.deliverByDate' },
            { path: 'entity.shippingInfo.logistics.deliveryTimeSlot.from' },
            { path: 'entity.shippingInfo.logistics.deliveryTimeSlot.to' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'entity.lineItems.image' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [{ path: 'entity.lineItems.physicalProperties.weight' }],
    },
    {
        transformFn: transformRESTAddressToSDKAddress,
        paths: [
            { path: 'entity.billingInfo.address' },
            {
                path: 'entity.shippingInfo.logistics.shippingDestination.address',
            },
            { path: 'entity.shippingInfo.logistics.pickupDetails.address' },
            { path: 'entity.recipientInfo.address' },
        ],
    },
])))();
export { ChannelType, DescriptionLineType, DiscountReason, DiscountType, ItemTypeItemType, JurisdictionType, PaymentOptionType, PickupMethod, SortOrder, SubscriptionFrequency, TaxableAddressType, V2SubscriptionFrequency, VatType, WebhookIdentityType, WeightUnit, } from './ecom-subscription-contracts-v1-subscription-contract-subscription-contracts.universal.js';
//# sourceMappingURL=ecom-subscription-contracts-v1-subscription-contract-subscription-contracts.public.js.map