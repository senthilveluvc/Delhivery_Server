import { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixEcomTotalsCalculatorV1TotalsCalculatorUrl(opts) {
    const domainToMappings = {
        'bo._base_domain_': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/calculate-totals',
                destPath: '/v1/calculate-totals',
            },
        ],
        _: [
            {
                srcPath: '/_api/totals-calculator',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/totals-calculator',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_totals-calculator';
/** Returns a totals calculation for specified line items. */
export function calculateTotals(payload) {
    function __calculateTotals({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'lineItems.physicalProperties.weight' },
                    { path: 'shippingAddress.geocode.latitude' },
                    { path: 'shippingAddress.geocode.longitude' },
                    { path: 'billingAddress.geocode.latitude' },
                    { path: 'billingAddress.geocode.longitude' },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude',
                    },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude',
                    },
                    { path: 'appliedDiscounts.merchantDiscount.percentage' },
                ],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'lineItems.serviceProperties.scheduledDate' },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.deliveryTimeSlot.from',
                    },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.deliveryTimeSlot.to',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.totals_calculation',
            method: 'POST',
            methodFqn: 'com.wix.ecom.totals_calculator.v1.TotalsCalculator.CalculateTotals',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomTotalsCalculatorV1TotalsCalculatorUrl({
                protoPath: '/v1/calculate-totals',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.latitude',
                        },
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.longitude',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude',
                        },
                        { path: 'appliedDiscounts.merchantDiscount.percentage' },
                    ],
                },
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from',
                        },
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to',
                        },
                        { path: 'membershipOptions.eligibleMemberships.expirationDate' },
                        {
                            path: 'membershipOptions.invalidMemberships.membership.expirationDate',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __calculateTotals;
}
//# sourceMappingURL=ecom-v1-totals-calculation-totals-calculator.http.js.map