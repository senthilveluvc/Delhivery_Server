"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateTotals = void 0;
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixEcomTotalsCalculatorV1TotalsCalculatorUrl(opts) {
    const domainToMappings = {
        'bo._base_domain_': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/totals-calculator',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/calculate-totals',
                destPath: '/v1/calculate-totals',
            },
        ],
        _: [
            {
                srcPath: '/_api/totals-calculator',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/totals-calculator',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_1.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_totals-calculator';
/** Returns a totals calculation for specified line items. */
function calculateTotals(payload) {
    function __calculateTotals({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'lineItems.physicalProperties.weight' },
                    { path: 'shippingAddress.geocode.latitude' },
                    { path: 'shippingAddress.geocode.longitude' },
                    { path: 'billingAddress.geocode.latitude' },
                    { path: 'billingAddress.geocode.longitude' },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude',
                    },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude',
                    },
                    { path: 'appliedDiscounts.merchantDiscount.percentage' },
                ],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'lineItems.serviceProperties.scheduledDate' },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.deliveryTimeSlot.from',
                    },
                    {
                        path: 'shippingOptions.shippingOptions.logistics.deliveryTimeSlot.to',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.totals_calculation',
            method: 'POST',
            methodFqn: 'com.wix.ecom.totals_calculator.v1.TotalsCalculator.CalculateTotals',
            packageName: PACKAGE_NAME,
            url: resolveComWixEcomTotalsCalculatorV1TotalsCalculatorUrl({
                protoPath: '/v1/calculate-totals',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.latitude',
                        },
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.longitude',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude',
                        },
                        { path: 'appliedDiscounts.merchantDiscount.percentage' },
                    ],
                },
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from',
                        },
                        {
                            path: 'shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from',
                        },
                        {
                            path: 'shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to',
                        },
                        { path: 'membershipOptions.eligibleMemberships.expirationDate' },
                        {
                            path: 'membershipOptions.invalidMemberships.membership.expirationDate',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __calculateTotals;
}
exports.calculateTotals = calculateTotals;
//# sourceMappingURL=ecom-v1-totals-calculation-totals-calculator.http.js.map