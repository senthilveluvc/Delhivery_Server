import { HttpClient } from '@wix/sdk-types';
import { ConversionRateResponse, ConversionRateResponseNonNullableFields, ConvertCurrencyIdentifiers, ConvertCurrencyResponse, ConvertCurrencyResponseNonNullableFields, DecimalValue, GetConversionRateIdentifiers, ListCurrenciesResponse, ListCurrenciesResponseNonNullableFields } from './ecommerce-currency-converter-v1-currency-rate-currencies.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function listCurrencies(httpClient: HttpClient): ListCurrenciesSignature;
interface ListCurrenciesSignature {
    /**
     * Returns an array of currencies. The array lists all currencies for which Wix supports conversion and their symbols.
     */
    (): Promise<ListCurrenciesResponse & ListCurrenciesResponseNonNullableFields>;
}
export declare function convertCurrency(httpClient: HttpClient): ConvertCurrencySignature;
interface ConvertCurrencySignature {
    /**
     * Returns an array of amounts converted from the original (`from`) currency to the target (`to`) currency and the timestamp for the conversion rate used.
     *
     *
     * Use the `convertCurrency()` function to convert an array of one or more amounts between two currencies. The `convertCurrency()` function returns an array of converted amounts and the timestamp for the conversion rate used.
     *
     * > **Note**:  The currency codes used must exist in the array of supported currencies returned by the [`listCurrencies()`](#listcurrencies) function.
     *
     * @param - Amounts to convert.
     * @param - Identifying details needed to determine which currency rate to convert. The combination of the `from` and `to` properties together comprise the unique ID.
     * @param - Options to use when converting currency.
     */
    (identifiers: ConvertCurrencyIdentifiers, amounts: DecimalValue[]): Promise<ConvertCurrencyResponse & ConvertCurrencyResponseNonNullableFields>;
}
export declare function getConversionRate(httpClient: HttpClient): GetConversionRateSignature;
interface GetConversionRateSignature {
    /**
     * Returns the conversion rate between 2 currencies.
     * @param - Identifying details needed to get the conversion rate. The combination of the `from` and `to` properties together comprise the unique ID.
     */
    (identifiers: GetConversionRateIdentifiers): Promise<ConversionRateResponse & ConversionRateResponseNonNullableFields>;
}
export { ConversionRateRequest, ConversionRateResponse, ConversionRateResponseNonNullableFields, ConvertCurrencyIdentifiers, ConvertCurrencyRequest, ConvertCurrencyResponse, ConvertCurrencyResponseNonNullableFields, Currency, CurrencyRate, DecimalValue, GetConversionRateIdentifiers, ListCurrenciesRequest, ListCurrenciesResponse, ListCurrenciesResponseNonNullableFields, } from './ecommerce-currency-converter-v1-currency-rate-currencies.universal.js';
