export interface CheckoutContentProvider {
    _id?: string | null;
}
export interface GetCheckoutContentRequest {
    /** ID of the app that provides the content. */
    appId: string;
    /** ID of the specific component content. */
    componentId: string;
    /** When a language is specified, it will be retrieved the content in that language. */
    languageCode?: string | null;
}
export interface GetCheckoutContentResponse {
    /** The requested CheckoutContent. */
    checkoutContent?: CheckoutContent;
}
export interface CheckoutContent {
    /**
     * Text to display in place of the "Continue shopping" link.
     * @readonly
     */
    continueShoppingLink?: string | null;
    /**
     * Text to display in place of the "Order summary" title.
     * @readonly
     */
    orderSummary?: string | null;
    /**
     * Text to display in place of the "Customer details" title.
     * @readonly
     */
    customerDetails?: string | null;
    /**
     * Text to display in place of the "Review and place order" title.
     * @readonly
     */
    reviewAndPlaceOrder?: string | null;
    /**
     * Text to display in place of the "Place order" button.
     * @readonly
     */
    placeOrderButton?: string | null;
    /**
     * Text to display in place of the "Place order & pay" button.
     * @readonly
     */
    placeOrderPayButton?: string | null;
}
/**
 * Retrieves a CheckoutContent.
 * @public
 * @documentationMaturity preview
 * @requiredField identifiers
 * @requiredField identifiers.appId
 * @requiredField identifiers.componentId
 * @permissionId ECOM.CHECKOUT_CONTENT_READ
 * @applicableIdentity VISITOR
 * @fqn wix.ecom.checkout_content_spi_host.v1.CheckoutContentSPIHostService.GetCheckoutContent
 */
export declare function getCheckoutContent(identifiers: GetCheckoutContentIdentifiers, options?: GetCheckoutContentOptions): Promise<GetCheckoutContentResponse>;
export interface GetCheckoutContentIdentifiers {
    /** ID of the app that provides the content. */
    appId: string;
    /** ID of the specific component content. */
    componentId: string;
}
export interface GetCheckoutContentOptions {
    /** When a language is specified, it will be retrieved the content in that language. */
    languageCode?: string | null;
}
