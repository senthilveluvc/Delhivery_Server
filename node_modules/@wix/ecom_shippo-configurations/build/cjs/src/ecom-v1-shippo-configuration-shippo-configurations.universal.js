"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateExtendedFields = exports.queryShippoConfigurations = exports.deleteShippoConfiguration = exports.updateShippoConfiguration = exports.getShippoConfiguration = exports.createShippoConfiguration = exports.WebhookIdentityType = exports.SortOrder = exports.PackageType = exports.InternationalService = exports.CalculationType = exports.DomesticService = void 0;
const transform_error_1 = require("@wix/sdk-runtime/transform-error");
const query_builder_1 = require("@wix/sdk-runtime/query-builder");
const rename_all_nested_keys_1 = require("@wix/sdk-runtime/rename-all-nested-keys");
const ambassadorWixEcomV1ShippoConfiguration = __importStar(require("./ecom-v1-shippo-configuration-shippo-configurations.http.js"));
// @ts-ignore
const address_1 = require("@wix/sdk-runtime/transformations/address");
const address_2 = require("@wix/sdk-runtime/transformations/address");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
var DomesticService;
(function (DomesticService) {
    DomesticService["UNKNOWN_DOMESTIC_SERVICE"] = "UNKNOWN_DOMESTIC_SERVICE";
    DomesticService["GROUND_ADVANTAGE"] = "GROUND_ADVANTAGE";
    DomesticService["PRIORITY_MAIL"] = "PRIORITY_MAIL";
    DomesticService["PRIORITY_MAIL_EXPRESS"] = "PRIORITY_MAIL_EXPRESS";
})(DomesticService || (exports.DomesticService = DomesticService = {}));
var CalculationType;
(function (CalculationType) {
    CalculationType["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
    CalculationType["FIXED"] = "FIXED";
    CalculationType["PERCENTAGE"] = "PERCENTAGE";
})(CalculationType || (exports.CalculationType = CalculationType = {}));
var InternationalService;
(function (InternationalService) {
    InternationalService["UNKNOWN_INTERNATIONAL_SERVICE"] = "UNKNOWN_INTERNATIONAL_SERVICE";
    InternationalService["FIRST_CLASS_PACKAGE_INTERNATIONAL"] = "FIRST_CLASS_PACKAGE_INTERNATIONAL";
    InternationalService["PRIORITY_MAIL_INTERNATIONAL"] = "PRIORITY_MAIL_INTERNATIONAL";
    InternationalService["PRIORITY_MAIL_EXPRESS_INTERNATIONAL"] = "PRIORITY_MAIL_EXPRESS_INTERNATIONAL";
})(InternationalService || (exports.InternationalService = InternationalService = {}));
var PackageType;
(function (PackageType) {
    PackageType["UNKNOWN_PACKAGE_TYPE"] = "UNKNOWN_PACKAGE_TYPE";
    PackageType["CUSTOM"] = "CUSTOM";
    PackageType["FLAT_RATE_ENVELOPE"] = "FLAT_RATE_ENVELOPE";
    PackageType["PADDED_FLAT_RATE_ENVELOPE"] = "PADDED_FLAT_RATE_ENVELOPE";
    PackageType["SMALL_FLAT_RATE_BOX"] = "SMALL_FLAT_RATE_BOX";
    PackageType["MEDIUM_FLAT_RATE_BOX_1"] = "MEDIUM_FLAT_RATE_BOX_1";
    PackageType["MEDIUM_FLAT_RATE_BOX_2"] = "MEDIUM_FLAT_RATE_BOX_2";
    PackageType["LARGE_FLAT_RATE_BOX"] = "LARGE_FLAT_RATE_BOX";
})(PackageType || (exports.PackageType = PackageType = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
/**
 * Creates a ShippoConfiguration.
 * @param shippoConfiguration - ShippoConfiguration to be created.
 * @public
 * @documentationMaturity preview
 * @requiredField shippoConfiguration
 * @requiredField shippoConfiguration.deliveryRegionId
 * @requiredField shippoConfiguration.osLocationId
 * @requiredField shippoConfiguration.packageDetails
 * @requiredField shippoConfiguration.packageDetails.dimensions.height
 * @requiredField shippoConfiguration.packageDetails.dimensions.length
 * @requiredField shippoConfiguration.packageDetails.dimensions.width
 * @requiredField shippoConfiguration.packageType
 * @permissionId ECOM.SHIPPO_CONFIGURATION_CREATE
 * @returns The created ShippoConfiguration.
 * @fqn wix.ecom.delivery.v1.ShippoService.CreateShippoConfiguration
 */
async function createShippoConfiguration(shippoConfiguration, options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = (0, transform_paths_1.transformPaths)((0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        shippoConfiguration: shippoConfiguration,
        backupRate: options?.backupRate,
    }), [
        {
            transformFn: address_1.transformSDKAddressToRESTAddress,
            paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
        },
    ]);
    const reqOpts = ambassadorWixEcomV1ShippoConfiguration.createShippoConfiguration(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(result.data, [
            {
                transformFn: address_2.transformRESTAddressToSDKAddress,
                paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
            },
        ]))?.shippoConfiguration;
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                shippoConfiguration: '$[0]',
                backupRate: '$[1].backupRate',
            },
            singleArgumentUnchanged: false,
        }, ['shippoConfiguration', 'options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.createShippoConfiguration = createShippoConfiguration;
/**
 * Retrieves a ShippoConfiguration.
 * @param shippoConfigurationId - ID of the ShippoConfiguration to retrieve.
 * @public
 * @documentationMaturity preview
 * @requiredField shippoConfigurationId
 * @permissionId ECOM.SHIPPO_CONFIGURATION_READ
 * @returns The requested ShippoConfiguration.
 * @fqn wix.ecom.delivery.v1.ShippoService.GetShippoConfiguration
 */
async function getShippoConfiguration(shippoConfigurationId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        shippoConfigurationId: shippoConfigurationId,
    });
    const reqOpts = ambassadorWixEcomV1ShippoConfiguration.getShippoConfiguration(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(result.data, [
            {
                transformFn: address_2.transformRESTAddressToSDKAddress,
                paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
            },
        ]))?.shippoConfiguration;
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { shippoConfigurationId: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['shippoConfigurationId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.getShippoConfiguration = getShippoConfiguration;
/**
 * Updates a ShippoConfiguration.
 * @param _id - ShippoConfiguration ID.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @requiredField shippoConfiguration
 * @requiredField shippoConfiguration.revision
 * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE
 * @returns Updated ShippoConfiguration.
 * @fqn wix.ecom.delivery.v1.ShippoService.UpdateShippoConfiguration
 */
async function updateShippoConfiguration(_id, shippoConfiguration) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = (0, transform_paths_1.transformPaths)((0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        shippoConfiguration: { ...shippoConfiguration, id: _id },
    }), [
        {
            transformFn: address_1.transformSDKAddressToRESTAddress,
            paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
        },
    ]);
    const reqOpts = ambassadorWixEcomV1ShippoConfiguration.updateShippoConfiguration(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(result.data, [
            {
                transformFn: address_2.transformRESTAddressToSDKAddress,
                paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
            },
        ]))?.shippoConfiguration;
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: { shippoConfiguration: '$[1]' },
            explicitPathsToArguments: { 'shippoConfiguration.id': '$[0]' },
            singleArgumentUnchanged: false,
        }, ['_id', 'shippoConfiguration']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.updateShippoConfiguration = updateShippoConfiguration;
/**
 * Deletes a ShippoConfiguration.
 * @param shippoConfigurationId - ID of the ShippoConfiguration to delete.
 * @public
 * @documentationMaturity preview
 * @requiredField shippoConfigurationId
 * @permissionId ECOM.SHIPPO_CONFIGURATION_DELETE
 * @fqn wix.ecom.delivery.v1.ShippoService.DeleteShippoConfiguration
 */
async function deleteShippoConfiguration(shippoConfigurationId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        shippoConfigurationId: shippoConfigurationId,
    });
    const reqOpts = ambassadorWixEcomV1ShippoConfiguration.deleteShippoConfiguration(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { shippoConfigurationId: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['shippoConfigurationId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.deleteShippoConfiguration = deleteShippoConfiguration;
/**
 * Retrieves a list of ShippoConfigurations, given the provided [paging, filtering, and sorting][1].
 *
 * Up to 1,000 ShippoConfigurations can be returned per request.
 *
 * To learn how to query ShippoConfigurations, see [API Query Language][2].
 *
 * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging
 * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language
 * @public
 * @documentationMaturity preview
 * @permissionId ECOM.SHIPPO_CONFIGURATION_READ
 * @fqn wix.ecom.delivery.v1.ShippoService.QueryShippoConfigurations
 */
function queryShippoConfigurations() {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[0];
    return (0, query_builder_1.queryBuilder)({
        func: async (payload) => {
            const reqOpts = ambassadorWixEcomV1ShippoConfiguration.queryShippoConfigurations(payload);
            sideEffects?.onSiteCall?.();
            try {
                const result = await httpClient.request(reqOpts);
                sideEffects?.onSuccess?.(result);
                return result;
            }
            catch (err) {
                sideEffects?.onError?.(err);
                throw err;
            }
        },
        requestTransformer: (query) => {
            const args = [query, {}];
            return (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
                ...args?.[1],
                query: args?.[0],
            });
        },
        responseTransformer: ({ data, }) => {
            const transformedData = (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(data, [
                {
                    transformFn: address_2.transformRESTAddressToSDKAddress,
                    paths: [{ path: 'shippoConfigurations.shipFromAddress' }],
                },
            ]));
            return {
                items: transformedData?.shippoConfigurations,
                pagingMetadata: transformedData?.pagingMetadata,
            };
        },
        errorTransformer: (err) => {
            const transformedError = (0, transform_error_1.transformError)(err, {
                spreadPathsToArguments: {},
                explicitPathsToArguments: { query: '$[0]' },
                singleArgumentUnchanged: false,
            });
            throw transformedError;
        },
        pagingMethod: 'CURSOR',
        transformationPaths: {},
    });
}
exports.queryShippoConfigurations = queryShippoConfigurations;
/**
 * Updates extended fields of a ShippoConfiguration without incrementing revision
 * @param _id - ID of the entity to update.
 * @param namespace - Identifier for the app whose extended fields are being updated.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @requiredField namespace
 * @requiredField options
 * @requiredField options.namespaceData
 * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE
 * @fqn wix.ecom.delivery.v1.ShippoService.UpdateExtendedFields
 */
async function updateExtendedFields(_id, namespace, options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[3];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        id: _id,
        namespace: namespace,
        namespaceData: options?.namespaceData,
    });
    const reqOpts = ambassadorWixEcomV1ShippoConfiguration.updateExtendedFields(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(result.data, [
            {
                transformFn: address_2.transformRESTAddressToSDKAddress,
                paths: [{ path: 'shippoConfiguration.shipFromAddress' }],
            },
        ]));
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                id: '$[0]',
                namespace: '$[1]',
                namespaceData: '$[2].namespaceData',
            },
            singleArgumentUnchanged: false,
        }, ['_id', 'namespace', 'options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.updateExtendedFields = updateExtendedFields;
//# sourceMappingURL=ecom-v1-shippo-configuration-shippo-configurations.universal.js.map