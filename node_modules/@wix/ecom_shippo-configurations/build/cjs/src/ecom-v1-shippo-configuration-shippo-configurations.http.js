"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateExtendedFields = exports.queryShippoConfigurations = exports.deleteShippoConfiguration = exports.updateShippoConfiguration = exports.getShippoConfiguration = exports.createShippoConfiguration = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixEcomDeliveryV1ShippoServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/_api/shippo-service',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/ecom/v1/shippo-configurations',
                destPath: '/v1/shippo-configurations',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_shippo-configurations';
/** Creates a ShippoConfiguration. */
function createShippoConfiguration(payload) {
    function __createShippoConfiguration({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'shippoConfiguration.createdDate' },
                    { path: 'shippoConfiguration.updatedDate' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                    { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.CreateShippoConfiguration',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippoConfiguration.createdDate' },
                        { path: 'shippoConfiguration.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                        { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createShippoConfiguration;
}
exports.createShippoConfiguration = createShippoConfiguration;
/** Retrieves a ShippoConfiguration. */
function getShippoConfiguration(payload) {
    function __getShippoConfiguration({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'GET',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.GetShippoConfiguration',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations/{shippoConfigurationId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippoConfiguration.createdDate' },
                        { path: 'shippoConfiguration.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                        { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getShippoConfiguration;
}
exports.getShippoConfiguration = getShippoConfiguration;
/** Updates a ShippoConfiguration. */
function updateShippoConfiguration(payload) {
    function __updateShippoConfiguration({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'shippoConfiguration.createdDate' },
                    { path: 'shippoConfiguration.updatedDate' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                    { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'PATCH',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.UpdateShippoConfiguration',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations/{shippoConfiguration.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippoConfiguration.createdDate' },
                        { path: 'shippoConfiguration.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                        { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateShippoConfiguration;
}
exports.updateShippoConfiguration = updateShippoConfiguration;
/** Deletes a ShippoConfiguration. */
function deleteShippoConfiguration(payload) {
    function __deleteShippoConfiguration({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'DELETE',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.DeleteShippoConfiguration',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations/{shippoConfigurationId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteShippoConfiguration;
}
exports.deleteShippoConfiguration = deleteShippoConfiguration;
/**
 * Retrieves a list of ShippoConfigurations, given the provided [paging, filtering, and sorting][1].
 *
 * Up to 1,000 ShippoConfigurations can be returned per request.
 *
 * To learn how to query ShippoConfigurations, see [API Query Language][2].
 *
 * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging
 * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language
 */
function queryShippoConfigurations(payload) {
    function __queryShippoConfigurations({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.QueryShippoConfigurations',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippoConfigurations.createdDate' },
                        { path: 'shippoConfigurations.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'shippoConfigurations.shipFromAddress.geocode.latitude' },
                        {
                            path: 'shippoConfigurations.shipFromAddress.geocode.longitude',
                        },
                    ],
                },
            ]),
            fallback: [
                {
                    method: 'POST',
                    url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                        protoPath: '/v1/shippo-configurations/query',
                        data: payload,
                        host,
                    }),
                    data: payload,
                },
            ],
        };
        return metadata;
    }
    return __queryShippoConfigurations;
}
exports.queryShippoConfigurations = queryShippoConfigurations;
/** Updates extended fields of a ShippoConfiguration without incrementing revision */
function updateExtendedFields(payload) {
    function __updateExtendedFields({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.shippo_configuration',
            method: 'POST',
            methodFqn: 'wix.ecom.delivery.v1.ShippoService.UpdateExtendedFields',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomDeliveryV1ShippoServiceUrl({
                protoPath: '/v1/shippo-configurations/{id}/update-extended-fields',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'shippoConfiguration.createdDate' },
                        { path: 'shippoConfiguration.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },
                        { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateExtendedFields;
}
exports.updateExtendedFields = updateExtendedFields;
//# sourceMappingURL=ecom-v1-shippo-configuration-shippo-configurations.http.js.map