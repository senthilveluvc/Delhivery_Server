import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { CheckoutSettings, CheckoutSettingsUpdatedEnvelope, GetCheckoutSettingsResponse, GetCheckoutSettingsResponseNonNullableFields, UpdateCheckoutSettingsResponse, UpdateCheckoutSettingsResponseNonNullableFields } from './ecom-v1-checkout-settings-checkout-settings.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function getCheckoutSettings(httpClient: HttpClient): GetCheckoutSettingsSignature;
interface GetCheckoutSettingsSignature {
    /**
     * Retrieves the sites' checkout settings.
     *
     *
     * The `getCheckoutSettings()` function returns a Promise that resolves to checkout settings.
     * @returns The requested checkout settings.
     */
    (): Promise<GetCheckoutSettingsResponse & GetCheckoutSettingsResponseNonNullableFields>;
}
export declare function updateCheckoutSettings(httpClient: HttpClient): UpdateCheckoutSettingsSignature;
interface UpdateCheckoutSettingsSignature {
    /**
     * Updates the sites' checkout settings.
     *
     *
     * The `updateCheckoutSettings()` function returns a Promise that resolves to the newly updated checkout settings.
     * @param - Checkout settings to update.
     * @returns The updated checkout settings.
     */
    (checkoutSettings: CheckoutSettings): Promise<UpdateCheckoutSettingsResponse & UpdateCheckoutSettingsResponseNonNullableFields>;
}
export declare const onCheckoutSettingsUpdated: EventDefinition<CheckoutSettingsUpdatedEnvelope, "wix.ecom.v1.checkout_settings_updated">;
export { ActionEvent, Alignment, BaseEventMetadata, CheckboxField, CheckoutBrand, CheckoutFields, CheckoutHeader, CheckoutPolicies, CheckoutSettings, CheckoutSettingsUpdatedEnvelope, ContactUsPolicy, CustomCheckoutPolicy, DeleteCheckoutSettingsRequest, DeleteCheckoutSettingsResponse, DigitalItemPolicy, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, FocalPoint, GetCheckoutSettingsRequest, GetCheckoutSettingsResponse, GetCheckoutSettingsResponseNonNullableFields, GiftCardProviderWasProvisioned, IdentificationData, IdentificationDataIdOneOf, ListCheckoutSettingsRequest, ListCheckoutSettingsResponse, Logo, LogoSize, MessageEnvelope, PrivacyPolicy, RestoreInfo, ReturnPolicy, TermsAndConditionsPolicy, UpdateCheckoutSettingsRequest, UpdateCheckoutSettingsResponse, UpdateCheckoutSettingsResponseNonNullableFields, WebhookIdentityType, } from './ecom-v1-checkout-settings-checkout-settings.universal.js';
