"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSettings = exports.stopCollectingRequests = exports.startCollectingRequests = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressEcomBackInStockBackInStockSettingsServiceUrl(opts) {
    const domainToMappings = {
        'bo._base_domain_': [
            {
                srcPath: '/back-in-stock-service',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/back-in-stock-service',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/back-in-stock-service',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_1.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_back-in-stock-settings';
/**
 * Sets `settings.collectionStates.collectingRequests` to `true` for given `appId`.
 *
 * When the collection state is set to `true`, collecting requests is enabled and customers may request
 * notifications for out of stock products. While collecting is enabled, customers see a "Notify When Available"
 * button on out-of-stock items. Customers can click the button to enter their email address, which creates the
 * notification request.
 */
function startCollectingRequests(payload) {
    function __startCollectingRequests({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.back_in_stock_settings',
            method: 'POST',
            methodFqn: 'com.wixpress.ecom.back.in.stock.BackInStockSettingsService.StartCollectingRequests',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressEcomBackInStockBackInStockSettingsServiceUrl({
                protoPath: '/v1/back-in-stock-notification-requests/settings/start-collecting',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __startCollectingRequests;
}
exports.startCollectingRequests = startCollectingRequests;
/**
 * Sets `settings.collectionStates.collectingRequests` to `false` for given `appId`.
 *
 * When the collection state is set to `false`, collecting notification requests is disabled.
 */
function stopCollectingRequests(payload) {
    function __stopCollectingRequests({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.back_in_stock_settings',
            method: 'POST',
            methodFqn: 'com.wixpress.ecom.back.in.stock.BackInStockSettingsService.StopCollectingRequests',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressEcomBackInStockBackInStockSettingsServiceUrl({
                protoPath: '/v1/back-in-stock-notification-requests/settings/stop-collecting',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __stopCollectingRequests;
}
exports.stopCollectingRequests = stopCollectingRequests;
/** Retrieves back in stock request settings. */
function getSettings(payload) {
    function __getSettings({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.back_in_stock_settings',
            method: 'PUT',
            methodFqn: 'com.wixpress.ecom.back.in.stock.BackInStockSettingsService.GetSettings',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressEcomBackInStockBackInStockSettingsServiceUrl({
                protoPath: '/v1/back-in-stock-notification-requests/settings',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __getSettings;
}
exports.getSettings = getSettings;
//# sourceMappingURL=ecom-v1-back-in-stock-settings-back-in-stock-settings.http.js.map