import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { AbandonedCheckout, AbandonedCheckoutNonNullableFields, AbandonedCheckoutRecoveredEnvelope, AbandonedCheckoutsQueryBuilder, RawHttpResponse, RawHttpResponseNonNullableFields, SearchAbandonedCheckoutsOptions, SearchAbandonedCheckoutsResponse, SearchAbandonedCheckoutsResponseNonNullableFields } from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function getAbandonedCheckout(httpClient: HttpClient): GetAbandonedCheckoutSignature;
interface GetAbandonedCheckoutSignature {
    /**
     * Retrieves an abandoned checkout.
     * @param - Abandoned checkout ID.
     * @returns The requested abandoned checkout.
     */
    (abandonedCheckoutId: string): Promise<AbandonedCheckout & AbandonedCheckoutNonNullableFields>;
}
export declare function deleteAbandonedCheckout(httpClient: HttpClient): DeleteAbandonedCheckoutSignature;
interface DeleteAbandonedCheckoutSignature {
    /**
     * Delete an AbandonedCheckout
     * @param - Id of the abandoned checkout to delete
     */
    (abandonedCheckoutId: string): Promise<void>;
}
export declare function queryAbandonedCheckouts(httpClient: HttpClient): QueryAbandonedCheckoutsSignature;
interface QueryAbandonedCheckoutsSignature {
    /**
     * Creates a query to retrieve a list of abandoned checkouts.
     *
     * The `queryAbandonedCheckouts()` function builds a query to retrieve a list of abandoned checkouts and returns a `ResultsQueryBuilder` object.
     *
     * The returned object contains the query definition, which is typically used to run the query using the `find()` function.
     *
     * You can refine the query by chaining `ResultsQueryBuilder` functions onto the query. `ResultsQueryBuilder` functions enable you to sort, filter, and control the results `queryAbandonedCheckouts()` returns.
     */
    (): AbandonedCheckoutsQueryBuilder;
}
export declare function searchAbandonedCheckouts(httpClient: HttpClient): SearchAbandonedCheckoutsSignature;
interface SearchAbandonedCheckoutsSignature {
    /**
     * Retrieves a list of abandoned checkouts, given the provided paging, filtering, searchDetails and sorting. Up to 100 abandoned checkouts can be returned per request.
     */
    (options?: SearchAbandonedCheckoutsOptions | undefined): Promise<SearchAbandonedCheckoutsResponse & SearchAbandonedCheckoutsResponseNonNullableFields>;
}
export declare function redirectToCheckout(httpClient: HttpClient): RedirectToCheckoutSignature;
interface RedirectToCheckoutSignature {
    /**
     * Redirects the abandoned checkout to the checkout page.
     * @param - abandoned checkout id
     * @param - Identifier of the metaSite this checkout uses
     */
    (abandonedCheckoutId: string, metasiteId: string): Promise<RawHttpResponse & RawHttpResponseNonNullableFields>;
}
export declare const onAbandonedCheckoutRecovered: EventDefinition<AbandonedCheckoutRecoveredEnvelope, "wix.ecom.v1.abandoned_checkout_recovered">;
export { AbandonedCheckout, AbandonedCheckoutNonNullableFields, AbandonedCheckoutRecovered, AbandonedCheckoutRecoveredEnvelope, AbandonedCheckoutsQueryBuilder, AbandonedCheckoutsQueryResult, ActionEvent, Activity, ActivityType, AddAbandonedCheckoutActivityRequest, AddAbandonedCheckoutActivityResponse, BaseEventMetadata, BuyerInfo, Cancel, CartAbandonedEvent, CartRecoveredEvent, CommonCursorPaging, CommonCursors, CommonPaging, CommonPagingMetadataV2, CommonSortOrder, CommonSorting, Complete, CursorPaging, Cursors, DeleteAbandonedCheckoutRequest, DeleteAbandonedCheckoutResponse, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, FullAddressContactDetails, GetAbandonedCheckoutRequest, GetAbandonedCheckoutResponse, GetAbandonedCheckoutResponseNonNullableFields, HeadersEntry, IdentificationData, IdentificationDataIdOneOf, Identity, MessageEnvelope, Mode, MultiCurrencyPrice, Paging, PagingMetadataV2, QueryAbandonedCheckoutsRequest, QueryAbandonedCheckoutsResponse, QueryAbandonedCheckoutsResponseNonNullableFields, QueryV2, QueryV2PagingMethodOneOf, RawHttpResponse, RawHttpResponseNonNullableFields, RedirectToCheckoutRequest, Reschedule, RestoreInfo, Search, SearchAbandonedCheckoutsOptions, SearchAbandonedCheckoutsRequest, SearchAbandonedCheckoutsResponse, SearchAbandonedCheckoutsResponseNonNullableFields, SearchDetails, SearchPagingMethodOneOf, SortOrder, Sorting, Status, Task, TaskAction, TaskActionActionOneOf, TaskKey, Totals, V1BuyerInfo, V1BuyerInfoIdOneOf, VatId, VatType, WebhookIdentityType, } from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';
