"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.redirectToCheckout = exports.searchAbandonedCheckouts = exports.queryAbandonedCheckouts = exports.deleteAbandonedCheckout = exports.getAbandonedCheckout = exports.WebhookIdentityType = exports.Mode = exports.CommonSortOrder = exports.SortOrder = exports.Identity = exports.VatType = exports.Status = exports.ActivityType = void 0;
const transform_error_1 = require("@wix/sdk-runtime/transform-error");
const query_builder_1 = require("@wix/sdk-runtime/query-builder");
const rename_all_nested_keys_1 = require("@wix/sdk-runtime/rename-all-nested-keys");
const ambassadorWixEcomV1AbandonedCheckout = __importStar(require("./ecom-v1-abandoned-checkout-abandoned-checkouts.http.js"));
var ActivityType;
(function (ActivityType) {
    /** Not implemented. */
    ActivityType["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
    /** Scheduled. */
    ActivityType["SCHEDULED"] = "SCHEDULED";
    /** Email sent. */
    ActivityType["EMAIL_SENT"] = "EMAIL_SENT";
    /** Email not sent. */
    ActivityType["EMAIL_NOT_SENT"] = "EMAIL_NOT_SENT";
    /** Notification sent. */
    ActivityType["NOTIFICATION_SENT"] = "NOTIFICATION_SENT";
    /** Task created. */
    ActivityType["TASK_CREATED"] = "TASK_CREATED";
})(ActivityType || (exports.ActivityType = ActivityType = {}));
/** Status of the abandoned checkout. */
var Status;
(function (Status) {
    /** Abandoned. */
    Status["ABANDONED"] = "ABANDONED";
    /** Recovered. */
    Status["RECOVERED"] = "RECOVERED";
})(Status || (exports.Status = Status = {}));
/** tax info types */
var VatType;
(function (VatType) {
    VatType["UNSPECIFIED"] = "UNSPECIFIED";
    /** CPF - for individual tax payers. */
    VatType["CPF"] = "CPF";
    /** CNPJ - for corporations */
    VatType["CNPJ"] = "CNPJ";
})(VatType || (exports.VatType = VatType = {}));
var Identity;
(function (Identity) {
    /** Customer is the site owner */
    Identity["ADMIN"] = "ADMIN";
    /** Customer is logged in */
    Identity["MEMBER"] = "MEMBER";
    /** Customer is not logged in */
    Identity["VISITOR"] = "VISITOR";
    /** Contact was created for the customer */
    Identity["CONTACT"] = "CONTACT";
})(Identity || (exports.Identity = Identity = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var CommonSortOrder;
(function (CommonSortOrder) {
    /** Ascending order. */
    CommonSortOrder["ASC"] = "ASC";
    /** Descending order. */
    CommonSortOrder["DESC"] = "DESC";
})(CommonSortOrder || (exports.CommonSortOrder = CommonSortOrder = {}));
var Mode;
(function (Mode) {
    /** Any */
    Mode["OR"] = "OR";
    /** All */
    Mode["AND"] = "AND";
})(Mode || (exports.Mode = Mode = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
/**
 * Retrieves an abandoned checkout.
 * @param abandonedCheckoutId - Abandoned checkout ID.
 * @public
 * @documentationMaturity preview
 * @requiredField abandonedCheckoutId
 * @permissionId ECOM.ABANDONED_CHECKOUT_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @returns The requested abandoned checkout.
 * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.GetAbandonedCheckout
 */
async function getAbandonedCheckout(abandonedCheckoutId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        abandonedCheckoutId: abandonedCheckoutId,
    });
    const reqOpts = ambassadorWixEcomV1AbandonedCheckout.getAbandonedCheckout(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(result.data)
            ?.abandonedCheckout;
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { abandonedCheckoutId: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['abandonedCheckoutId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.getAbandonedCheckout = getAbandonedCheckout;
/**
 * Delete an AbandonedCheckout
 * @param abandonedCheckoutId - Id of the abandoned checkout to delete
 * @public
 * @documentationMaturity preview
 * @requiredField abandonedCheckoutId
 * @permissionId ECOM.ABANDONED_CHECKOUT_DELETE
 * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.DeleteAbandonedCheckout
 */
async function deleteAbandonedCheckout(abandonedCheckoutId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        abandonedCheckoutId: abandonedCheckoutId,
    });
    const reqOpts = ambassadorWixEcomV1AbandonedCheckout.deleteAbandonedCheckout(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { abandonedCheckoutId: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['abandonedCheckoutId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.deleteAbandonedCheckout = deleteAbandonedCheckout;
/**
 * Creates a query to retrieve a list of abandoned checkouts.
 *
 * The `queryAbandonedCheckouts()` function builds a query to retrieve a list of abandoned checkouts and returns a `ResultsQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the `find()` function.
 *
 * You can refine the query by chaining `ResultsQueryBuilder` functions onto the query. `ResultsQueryBuilder` functions enable you to sort, filter, and control the results `queryAbandonedCheckouts()` returns.
 * @public
 * @documentationMaturity preview
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @permissionId ECOM.ABANDONED_CHECKOUT_READ
 * @applicableIdentity APP
 * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.QueryAbandonedCheckouts
 */
function queryAbandonedCheckouts() {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[0];
    return (0, query_builder_1.queryBuilder)({
        func: async (payload) => {
            const reqOpts = ambassadorWixEcomV1AbandonedCheckout.queryAbandonedCheckouts(payload);
            sideEffects?.onSiteCall?.();
            try {
                const result = await httpClient.request(reqOpts);
                sideEffects?.onSuccess?.(result);
                return result;
            }
            catch (err) {
                sideEffects?.onError?.(err);
                throw err;
            }
        },
        requestTransformer: (query) => {
            const args = [query, {}];
            return (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
                ...args?.[1],
                query: args?.[0],
            });
        },
        responseTransformer: ({ data, }) => {
            const transformedData = (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(data);
            return {
                items: transformedData?.abandonedCheckouts,
                pagingMetadata: transformedData?.metadata,
            };
        },
        errorTransformer: (err) => {
            const transformedError = (0, transform_error_1.transformError)(err, {
                spreadPathsToArguments: {},
                explicitPathsToArguments: { query: '$[0]' },
                singleArgumentUnchanged: false,
            });
            throw transformedError;
        },
        pagingMethod: 'CURSOR',
        transformationPaths: {},
    });
}
exports.queryAbandonedCheckouts = queryAbandonedCheckouts;
/**
 * Retrieves a list of abandoned checkouts, given the provided paging, filtering, searchDetails and sorting. Up to 100 abandoned checkouts can be returned per request.
 * @public
 * @documentationMaturity preview
 * @permissionId ECOM.ABANDONED_CHECKOUT_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.SearchAbandonedCheckouts
 */
async function searchAbandonedCheckouts(options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        search: options?.search,
    });
    const reqOpts = ambassadorWixEcomV1AbandonedCheckout.searchAbandonedCheckouts(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(result.data);
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { search: '$[0].search' },
            singleArgumentUnchanged: false,
        }, ['options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.searchAbandonedCheckouts = searchAbandonedCheckouts;
/**
 * Redirects the abandoned checkout to the checkout page.
 * @param abandonedCheckoutId - abandoned checkout id
 * @param metasiteId - Identifier of the metaSite this checkout uses
 * @public
 * @documentationMaturity preview
 * @requiredField abandonedCheckoutId
 * @requiredField metasiteId
 * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.RedirectToCheckout
 */
async function redirectToCheckout(abandonedCheckoutId, metasiteId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        abandonedCheckoutId: abandonedCheckoutId,
        metasiteId: metasiteId,
    });
    const reqOpts = ambassadorWixEcomV1AbandonedCheckout.redirectToCheckout(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(result.data);
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                abandonedCheckoutId: '$[0]',
                metasiteId: '$[1]',
            },
            singleArgumentUnchanged: false,
        }, ['abandonedCheckoutId', 'metasiteId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.redirectToCheckout = redirectToCheckout;
//# sourceMappingURL=ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js.map