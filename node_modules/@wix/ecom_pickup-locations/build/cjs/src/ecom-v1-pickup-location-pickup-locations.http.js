"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bulkDeletePickupLocation = exports.bulkUpdatePickupLocation = exports.bulkCreatePickupLocation = exports.removeDeliveryRegion = exports.addDeliveryRegion = exports.queryPickupLocation = exports.deletePickupLocation = exports.updatePickupLocation = exports.getPickupLocation = exports.createPickupLocation = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixEcomV1PickupLocationsUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/pickup-locations',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/pickup-locations',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/ecom_pickup-locations';
/** Creates a new PickupLocation */
function createPickupLocation(payload) {
    function __createPickupLocation({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'pickupLocation.createdDate' },
                    { path: 'pickupLocation.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'POST',
            methodFqn: 'wix.ecom.v1.PickupLocations.CreatePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocation.createdDate' },
                        { path: 'pickupLocation.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createPickupLocation;
}
exports.createPickupLocation = createPickupLocation;
/** Get a PickupLocation by id */
function getPickupLocation(payload) {
    function __getPickupLocation({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'GET',
            methodFqn: 'wix.ecom.v1.PickupLocations.GetPickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/{pickupLocationId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocation.createdDate' },
                        { path: 'pickupLocation.updatedDate' },
                    ],
                },
            ]),
            fallback: [
                {
                    method: 'GET',
                    url: resolveWixEcomV1PickupLocationsUrl({
                        protoPath: '/v1/pickup-locations/{pickupLocationId}',
                        data: payload,
                        host,
                    }),
                    params: (0, rest_modules_1.toURLSearchParams)(payload),
                },
            ],
        };
        return metadata;
    }
    return __getPickupLocation;
}
exports.getPickupLocation = getPickupLocation;
/**
 * Update a PickupLocation
 * Delivery regions cannot be updated using this method, use AddDeliveryRegion and RemoveDeliveryRegion instead.
 */
function updatePickupLocation(payload) {
    function __updatePickupLocation({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'pickupLocation.createdDate' },
                    { path: 'pickupLocation.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'PATCH',
            methodFqn: 'wix.ecom.v1.PickupLocations.UpdatePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/{pickupLocation.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocation.createdDate' },
                        { path: 'pickupLocation.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updatePickupLocation;
}
exports.updatePickupLocation = updatePickupLocation;
/** Delete a PickupLocation */
function deletePickupLocation(payload) {
    function __deletePickupLocation({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'DELETE',
            methodFqn: 'wix.ecom.v1.PickupLocations.DeletePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/{pickupLocationId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deletePickupLocation;
}
exports.deletePickupLocation = deletePickupLocation;
/** Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) */
function queryPickupLocation(payload) {
    function __queryPickupLocation({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'POST',
            methodFqn: 'wix.ecom.v1.PickupLocations.QueryPickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocations.createdDate' },
                        { path: 'pickupLocations.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryPickupLocation;
}
exports.queryPickupLocation = queryPickupLocation;
/** Add a DeliveryRegion to a PickupLocation */
function addDeliveryRegion(payload) {
    function __addDeliveryRegion({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'POST',
            methodFqn: 'wix.ecom.v1.PickupLocations.AddDeliveryRegion',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/{pickupLocationId}/add-delivery-region',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocation.createdDate' },
                        { path: 'pickupLocation.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __addDeliveryRegion;
}
exports.addDeliveryRegion = addDeliveryRegion;
/** Remove a DeliveryRegion from a PickupLocation */
function removeDeliveryRegion(payload) {
    function __removeDeliveryRegion({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'POST',
            methodFqn: 'wix.ecom.v1.PickupLocations.RemoveDeliveryRegion',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/pickup-locations/{pickupLocationId}/remove-delivery-region',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocation.createdDate' },
                        { path: 'pickupLocation.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __removeDeliveryRegion;
}
exports.removeDeliveryRegion = removeDeliveryRegion;
/** Bulk Create for new PickupLocation */
function bulkCreatePickupLocation(payload) {
    function __bulkCreatePickupLocation({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'pickupLocations.createdDate' },
                    { path: 'pickupLocations.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'POST',
            methodFqn: 'wix.ecom.v1.PickupLocations.BulkCreatePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/bulk/pickup-locations/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocations.createdDate' },
                        { path: 'pickupLocations.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreatePickupLocation;
}
exports.bulkCreatePickupLocation = bulkCreatePickupLocation;
/** Update a PickupLocation */
function bulkUpdatePickupLocation(payload) {
    function __bulkUpdatePickupLocation({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'pickupLocations.createdDate' },
                    { path: 'pickupLocations.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'PATCH',
            methodFqn: 'wix.ecom.v1.PickupLocations.BulkUpdatePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/bulk/pickup-locations/update',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'pickupLocations.createdDate' },
                        { path: 'pickupLocations.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdatePickupLocation;
}
exports.bulkUpdatePickupLocation = bulkUpdatePickupLocation;
/** Delete a PickupLocation */
function bulkDeletePickupLocation(payload) {
    function __bulkDeletePickupLocation({ host }) {
        const metadata = {
            entityFqdn: 'wix.ecom.v1.pickup_location',
            method: 'DELETE',
            methodFqn: 'wix.ecom.v1.PickupLocations.BulkDeletePickupLocation',
            packageName: PACKAGE_NAME,
            url: resolveWixEcomV1PickupLocationsUrl({
                protoPath: '/v1/bulk/pickup-locations/delete',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __bulkDeletePickupLocation;
}
exports.bulkDeletePickupLocation = bulkDeletePickupLocation;
//# sourceMappingURL=ecom-v1-pickup-location-pickup-locations.http.js.map