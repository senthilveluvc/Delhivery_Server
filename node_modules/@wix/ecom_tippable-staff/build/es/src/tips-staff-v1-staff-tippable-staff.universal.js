import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixTipsStaffV1Staff from './tips-staff-v1-staff-tippable-staff.http.js';
export var IdentityType;
(function (IdentityType) {
    IdentityType["UNKNOWN"] = "UNKNOWN";
    IdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    IdentityType["MEMBER"] = "MEMBER";
    IdentityType["WIX_USER"] = "WIX_USER";
    IdentityType["APP"] = "APP";
})(IdentityType || (IdentityType = {}));
/**
 * Retrieves a list of up to 100 staff who are eligible to receive tips, given
 * the provided filtering.
 * @public
 * @documentationMaturity preview
 * @param options - Options to use when listing tippable staff.
 * @permissionId WIX_TIPS.STAFF_READ
 * @permissionScope Manage Bookings
 * @permissionScopeId SCOPE.DC-BOOKINGS.MANAGE-BOOKINGS
 * @permissionScope Manage Bookings - all permissions
 * @permissionScopeId SCOPE.DC-BOOKINGS-MEGA.MANAGE-BOOKINGS
 * @applicableIdentity APP
 * @fqn wix.tips.staff.v1.TipStaffService.ListTippableStaff
 */
export async function listTippableStaff(options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({
        includeWixUsers: options?.includeWixUsers,
        filterByName: options?.filterByName,
        filterByIds: options?.filterByIds,
    });
    const reqOpts = ambassadorWixTipsStaffV1Staff.listTippableStaff(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                includeWixUsers: '$[0].includeWixUsers',
                filterByName: '$[0].filterByName',
                filterByIds: '$[0].filterByIds',
            },
            singleArgumentUnchanged: false,
        }, ['options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=tips-staff-v1-staff-tippable-staff.universal.js.map